{"version":3,"file":"pages.js","mappings":";;;;;;;;AAAA,wEAAwE,gBAAgB,UAAU,UAAU;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC3BA,kBAAkB,mBAAO,CAAC,6EAAa;AACvC,2BAA2B,mBAAO,CAAC,mGAAwB;AAC3D,uBAAuB,mBAAO,CAAC,2FAAoB;;AAEnD,cAAc,mBAAO,CAAC,qEAAS;;AAE/B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,iEAAiE,mBAAmB;AACpF;AACA;AACA,EAAE;;AAEF;;AAEA;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9CA,wBAAwB,mBAAO,CAAC,2EAAqB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;AAEA;;;;;;;;;;;AC5DA,oBAAoB,mBAAO,CAAC,qEAAkB;AAC9C,4BAA4B,mBAAO,CAAC,uFAA2B;AAC/D,wBAAwB,mBAAO,CAAC,+EAAuB;;AAEvD;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,UAAU;AACtB,YAAY,QAAQ;AACpB;AACA,4CAA4C,sCAAsC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,2EAAqB;AACpD,oBAAoB,mBAAO,CAAC,qEAAkB;;;AAG9C;AACA,yBAAyB;AACzB;AACA;AACA;AACA,IAAI;AACJ;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA,IAAI,IAA6B;AACjC;AACA;AACA,KAAK,EAEJ;;AAED,WAAW,qBAAM;AACjB,MAAM,qBAAM;AACZ,EAAE,qBAAM;AACR;AACA,MAAM,qBAAM;AACZ,EAAE,qBAAM;AACR;AACA;;;;;;;;;;;;AC/TA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;ACDA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;ACDA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;ACDA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;ACDA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;ACDA,UAAU,mBAAO,CAAC,2DAAY,GAAG;AACjC;;;;;;;;;;;;;;;;;ACD6B;AAC8B;;AAE5C;AACf,aAAa,mEAAK;;AAElB;AACA;AACA,eAAe,mDAAe;AAC9B;AACA;AACA,EAAE;AACF;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;;;;;;;AChB+C;AACN;AACqB;AAC4B;;AAE1F,yBAAyB,qGAAc;;AAEvC;;AAEe,0BAA0B,0DAAI;;AAE7C;AACA;AACA,YAAY,QAAQ;AACpB;AACA,2BAA2B;AAC3B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA,yCAAyC,gFAAO;AAChD;AACA,0BAA0B,gFAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA,iCAAiC,eAAe;AAChD;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,EAAE,+CAAQ;AACV;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;;;;;;;;;;;;;;;;;;ACxR+C;AACe;AACD;AAC6B;;AAE1F,yBAAyB,qGAAc;;AAEvC;;AAEA;AACA;AACA;AACe,+BAA+B,0DAAI;;AAElD;AACA;AACA,YAAY,QAAQ;AACpB;AACA,2BAA2B;AAC3B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA,yCAAyC,gFAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,EAAE;AACZ;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,0CAA0C,IAAI,sCAAsC;AAC9I;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,sBAAsB,4EAAc;AACpC;AACA;;;;;;;;;;;;;;;AC9J0F;AAC1F,yBAAyB,qGAAc;;AAExB;AACf;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA,yBAAyB;AACzB;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AC3KoD;AACsC;;AAE1F,yBAAyB,qGAAc;;AAExB,2BAA2B,qEAAQ;;AAElD,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,IAAI;AAC9B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;ACrHe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfe;AACf;AACA;AACA;AACA,EAAE;AACF;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACV8B;;;;;;;;;;;;;;;;;;ACDW;AACzC;AACsD;AACE;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACO;AACP;AACA,YAAY,2DAAU;AACtB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,6BAA6B;AACnC;AACA;AACA;AACA;AACA,6CAA6C,KAAK;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,8DAAgB;AACvE,mBAAmB,mEAAiB;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACzMe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,uDAAuD;AACnE,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;ACvI+C;AACe;AACX;;AAEnD,yBAAyB,6DAAc;;AAExB,uBAAuB,0DAAI;;AAE1C;AACA;AACA,YAAY,QAAQ;AACpB;AACA,2BAA2B;AAC3B;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,sBAAsB,gFAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,uBAAuB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY,gBAAgB;AAC5B,YAAY,GAAG;AACf,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY,GAAG;AACf;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvmBuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,sDAAS;AAC1C;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACvFA;AACA,CAAuC;AACO;;AAE9C;AACA,WAAW,0DAAY;AACvB;AACA;AACA,WAAW,sDAAS;AACpB;;;AAGA,iEAAe;;;;;;;;;;;;;;;ACXA;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AClC4B;AACC;AACwB;AACS;AACN;AACI;;AAErD,YAAY,uCAAE;AACd,YAAY,uCAAE;AACd,qBAAqB;;;;;;SCV5B;SACA;;SAEA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;SACA;;SAEA;SACA;;SAEA;SACA;SACA;;;;;UCtBA;UACA;UACA;UACA;UACA,yCAAyC,wCAAwC;UACjF;UACA;UACA;;;;;UCPA;UACA;UACA;UACA;UACA,GAAG;UACH;UACA;UACA,CAAC;;;;;UCPD;;;;;UCAA;UACA;UACA;UACA,uDAAuD,iBAAiB;UACxE;UACA,gDAAgD,aAAa;UAC7D;;;;;;;;;;;;;;;;;;ACN0C;AAC1C,qDAAE;;;AAGF;AACA,CAAgE;AACnB;AACiB;AACJ;AACF;AACf;;;AAGzC,kBAAkB,gFAAO;;AAEzB;AACA,uBAAuB,uEAAgB;AACvC;AACA;AACA,CAAC;AACD;;AAEA;AACA,uBAAuB,qEAAY;AACnC;AACA;AACA,CAAC;AACD;;;AAGA,iBAAiB,8DAAM;AACvB;AACA;AACA,CAAC;;;AAGD;AACA,sBAAsB,oEAAW;AACjC;AACA;AACA,CAAC;AACD","sources":["webpack://audio-player/./node_modules/kalpa-tree-on-page/client-js/icons.js","webpack://audio-player/./node_modules/kalpa-tree-on-page/client-js/kalpa-tree-loader.js","webpack://audio-player/./node_modules/kalpa-tree-on-page/client-js/serialize-a-node.js","webpack://audio-player/./node_modules/kalpa-tree-on-page/client-js/serialize-tree-nodes.js","webpack://audio-player/./node_modules/kalpa-tree-on-page/client-js/streamish.js","webpack://audio-player/./node_modules/tripartite/active-element.js","webpack://audio-player/./node_modules/tripartite/calculate-relative-path.js","webpack://audio-player/./node_modules/tripartite/evaluate-in-context.js","webpack://audio-player/./node_modules/tripartite/execution-context.js","webpack://audio-player/./node_modules/tripartite/resolve-data-path.js","webpack://audio-player/./node_modules/tripartite/tripartite.js","webpack://audio-player/./views/dankolz/audio-player/controls.tri","webpack://audio-player/./views/dankolz/audio-player/next-button.tri","webpack://audio-player/./views/dankolz/audio-player/play-pause-button.tri","webpack://audio-player/./views/dankolz/audio-player/previous-button.tri","webpack://audio-player/./views/test1.tri","webpack://audio-player/./views/test2.tri","webpack://audio-player/./client-js/index.js","webpack://audio-player/./client-lib/library-view.mjs","webpack://audio-player/./client-lib/player-controls.mjs","webpack://audio-player/./client-lib/player.mjs","webpack://audio-player/./client-lib/playlist-view.mjs","webpack://audio-player/./node_modules/@webhandle/backbone-view/client-js/event-entry-mapper.js","webpack://audio-player/./node_modules/@webhandle/backbone-view/client-js/extract-event-names.js","webpack://audio-player/./node_modules/@webhandle/backbone-view/client-js/generate-id.js","webpack://audio-player/./node_modules/@webhandle/backbone-view/client-js/index.js","webpack://audio-player/./node_modules/@webhandle/backbone-view/client-js/view.js","webpack://audio-player/./node_modules/@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs","webpack://audio-player/./node_modules/@webhandle/drag-sortable-list/client-lib/list-view.mjs","webpack://audio-player/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/event-emitter.mjs","webpack://audio-player/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/index.js","webpack://audio-player/./node_modules/@webhandle/minimal-browser-event-emitter/client-js/streamish.mjs","webpack://audio-player/./views/load-browser-views.js","webpack://audio-player/webpack/bootstrap","webpack://audio-player/webpack/runtime/define property getters","webpack://audio-player/webpack/runtime/global","webpack://audio-player/webpack/runtime/hasOwnProperty shorthand","webpack://audio-player/webpack/runtime/make namespace object","webpack://audio-player/./client-js/pages.mjs"],"sourcesContent":["module.exports = `<div id=\"kalpa-tree-icons\" style=\"position: absolute; left: -10000px; width: 0; height: 0;\">\n\t<svg xmlns=\"http://www.w3.org/2000/svg\">\n\t\t<symbol id=\"icon-generic\" viewBox=\"0 0 12 12\">\n\t\t\t<path\n\t\t\t\td=\"M9.7 12H2.3C1 12 0 11 0 9.7V2.3C0 1 1 0 2.3 0h7.5C11 0 12 1 12 2.3v7.5C12 11 11 12 9.7 12zM8 5.3C8 4.6 7.4 4 6.6 4H5.3C4.6 4 4 4.6 4 5.3v1.3C4 7.4 4.6 8 5.3 8h1.3C7.4 8 8 7.4 8 6.6V5.3z\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-root\" viewBox=\"0 0 16 16\">\n\t\t\t<path d=\"M9 16V9h7v7H9zM9 0h7v7H9V0zM0 9h7v7H0V9zm0-9h7v7H0V0z\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-metric\" viewBox=\"0 0 100 100\">\n\t\t\t<path\n\t\t\t\td=\"M50 100C22.4 100 0 77.6 0 50S22.4 0 50 0s50 22.4 50 50-22.4 50-50 50zm0-76.9c-14.8 0-26.9 12.1-26.9 26.9S35.2 76.9 50 76.9 76.9 64.8 76.9 50 64.8 23.1 50 23.1zm0 38.4c-6.4 0-11.5-5.2-11.5-11.5S43.6 38.4 50 38.4s11.5 5.2 11.5 11.5S56.4 61.5 50 61.5z\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-perspective\" viewBox=\"0 0 12 11\">\n\t\t\t<path d=\"M12 11H0L5.9 0 12 11z\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-objective\" viewBox=\"0 0 12 10\">\n\t\t\t<ellipse cx=\"6\" cy=\"5\" rx=\"6\" ry=\"5\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-find\">\n\t\t\t<path\n\t\t\t\td=\"m 13.497323,12.433608 c 0.08422,0.978628 -1.417295,1.469942 -1.954282,0.657234 C 10.369384,11.968141 9.2411696,10.799391 8.087323,9.6566079 5.7875518,11.20515 2.2596241,10.270797 1.051352,7.7662065 -0.1027543,5.5922068 0.61269436,2.5743169 2.7539681,1.2885899 4.6322082,0.06461011 7.3623548,0.26924656 8.9286688,1.9183502 c 1.5121032,1.4872335 1.9726552,4.001359 0.8885116,5.8618536 -0.2008407,0.7179057 0.6439246,1.0286413 1.0395966,1.4627471 0.79551,0.9178591 1.752248,1.6943191 2.51171,2.6495761 0.08347,0.167322 0.129284,0.353872 0.128836,0.541081 z m -8.047,-9.7420001 C 3.5991559,2.6059751 2.107634,4.7815577 2.8684439,6.4772182 3.4629388,8.0470383 5.6500695,8.7859958 7.0177529,7.7488936 8.3664062,6.8424394 8.6521549,4.6587499 7.425963,3.52989 6.9118115,3.0069548 6.1883031,2.6803036 5.450323,2.6916079 z\" />\n\t\t</symbol>\n\t\t<symbol id=\"icon-collapsed\" viewBox=\"0 0 9 6\">\n\t\t\t<path\n\t\t\t\td=\"M4.4 6c-.2 0-.5-.1-.9-.5L.3 1.8C-.1 1.4-.1.7.3.3s1.1-.4 1.5 0l2.7 3.2L7.1.4C7.5 0 8.2 0 8.6.4c.4.4.4 1.1 0 1.5L5.4 5.5c-.3.4-.8.5-1 .5z\" />\n\t\t</symbol>\n\t</svg>\n</div>`\n","\nconst Streamish = require('./streamish')\nconst serializeTreeNodes = require('./serialize-tree-nodes')\nconst serializeANode = require('./serialize-a-node')\n\nconst icons = require('./icons')\n\nlet loadedStyles = []\n\n\nasync function loadKalpaTree(scriptLocation) {\n\treturn new Promise((resolve, reject) => {\n\t\tif (window.KalpaTree) {\n\t\t\tresolve(window.KalpaTree)\n\t\t}\n\t\telse {\n\t\t\tlet ckscript = document.createElement('script');\n\t\t\tckscript.setAttribute('src', scriptLocation);\n\t\t\tckscript.onload = async function () {\n\t\t\t\tresolve(window.KalpaTree)\n\t\t\t}\n\t\t\tdocument.head.appendChild(ckscript)\n\t\t}\n\t})\n}\n\nasync function createTree(options = {}) {\n\tlet plan = Object.assign({\n\t\ttreeContainerSelector: '#kalpa-tree'\n\t\t, stream: new Streamish()\n\t\t, loadStyles: true\n\t\t, styleLocation: '/kalpa-tree-on-page/css/white-page-tree.css'\n\t\t, scriptLocation: '/kalpa-tree-on-page/js/kalpa-tree.js'\n\t\t, data: null\n\n\t}, options)\n\treturn new Promise((resolve, reject) => {\n\t\t// Add the icon svgs if they haven't been added yet\n\t\tif(!document.querySelector('#kalpa-tree-icons')) {\n\t\t\tdocument.body.insertAdjacentHTML('beforeend', icons)\n\t\t}\n\n\t\t// Load the kalpa-tree script dependency then configure it\n\t\tloadKalpaTree(plan.scriptLocation).then(KalpaTree => {\n\n\t\t\tconst Tree = KalpaTree.default\n\t\t\tlet tree = new Tree({\n\t\t\t\tstream: plan.stream,\n\t\t\t\taccessors: {\n\t\t\t\t\ticon: 'nodeType'\n\t\t\t\t},\n\t\t\t\tinitialSelection: 0\n\t\t\t})\n\n\t\t\ttree.on('error', function (e) {\n\t\t\t\tconsole.log('tree error', e)\n\t\t\t})\n\n\t\t\ttree.on('move', function (node, newParent, previousParent, newIndex, prevIndex) {\n\t\t\t\tnode.parentId = newParent.id\n\t\t\t})\n\t\t\ttree.serializeTree = function() {\n\t\t\t\tlet result = []\n\t\t\t\tresult.push(tree.get(tree.root.id))\n\t\t\t\tserializeTreeNodes(this, tree.root.id, result)\n\t\t\t\treturn result\n\t\t\t}\n\t\t\ttree.serialize = function () {\n\t\t\t\tlet result = tree.serializeTree()\n\t\t\t\treturn JSON.stringify(result)\n\t\t\t}\n\t\t\t\n\t\t\tif(plan.treeContainerSelector) {\n\t\t\t\tdocument.querySelector(plan.treeContainerSelector).appendChild(tree.render().el.node())\n\t\t\t}\n\t\t\t\n\t\t\tif(plan.data && Array.isArray(plan.data)) {\n\t\t\t\tfor(let node of plan.data) {\n\t\t\t\t\ttree.options.stream.emit('data', node)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tresolve(tree)\n\t\t})\n\t\t\n\t\t// Load the stylesheet for minimal formatting\n\t\tif(plan.loadStyles && plan.styleLocation) {\n\t\t\tif(!loadedStyles.includes(plan.styleLocation)) {\n\t\t\t\tloadedStyles.push(plan.styleLocation)\n\t\t\t\tdocument.head.insertAdjacentHTML('beforeend', `<link href=\"${plan.styleLocation}\" rel=\"stylesheet\">`)\n\t\t\t}\n\t\t}\n\t})\n\n}\n\nmodule.exports = createTree","function serializeANode (tree, rootId, result) {\n\ttree.children(rootId).forEach(function (child) {\n\t\tchild.parentId = rootId\n\t\tresult.push(child)\n\t\tserializeANode(tree, child.id, result)\n\t})\n}\n\nmodule.exports = serializeANode","\nfunction serializeTreeNodes(tree, rootId, result) {\n\ttree.children(rootId).forEach(function (child) {\n\t\tchild.parentId = rootId\n\t\tresult.push(child)\n\t\tserializeTreeNodes(tree, child.id, result)\n\t})\n}\n\nmodule.exports = serializeTreeNodes","\nclass Streamish {\n\tconstructor() {\n\t\tthis.handles = {}\n\t}\n\ton(evt, handle) {\n\t\tlet handles = this.handles[evt]\n\t\tif (!handles) {\n\t\t\thandles = this.handles[evt] = []\n\t\t}\n\t\thandles.push(handle)\n\t\treturn this\n\t}\n\temit(evt, ...args) {\n\t\tif (evt in this.handles) {\n\t\t\tfor (let handle of this.handles[evt]) {\n\t\t\t\thandle.apply(this, args)\n\t\t\t}\n\t\t}\n\t}\n}\nmodule.exports = Streamish","\nconst defaultTemplateName = 'defaultTemplate'\n\nclass ActiveElement {\n\tconstructor(conditionalExpression, dataExpression, handlingExpression, tripartite) {\n\t\tthis.conditionalExpression = conditionalExpression\n\t\tthis.dataExpression = dataExpression\n\t\tthis.handlingExpression = handlingExpression || defaultTemplateName\n\t\tthis.tripartite = tripartite\n\t}\n}\n\nmodule.exports = ActiveElement","var calculateRelativePath = function(parentPath, currentPath) {\n\tif(!parentPath) {\n\t\treturn currentPath\n\t}\n\tif(!currentPath) {\n\t\treturn currentPath\n\t}\n\t\n\tif(currentPath.indexOf('../') != 0 && currentPath.indexOf('./') != 0) {\n\t\treturn currentPath\n\t}\n\t\n\tvar pparts = parentPath.split('/')\n\tvar cparts = currentPath.split('/')\n\t\n\t// trim any starting blank sections\n\twhile(pparts.length && !pparts[0]) {\n\t\tpparts.shift()\n\t}\n\twhile(cparts.length && !cparts[0]) {\n\t\tcparts.shift()\n\t}\n\t\n\tif(currentPath.indexOf('../') == 0 ) {\n\t\twhile(cparts.length && cparts[0] == '..') {\n\t\t\tpparts.pop()\n\t\t\tcparts.shift()\n\t\t}\n\t\tpparts.pop()\n\t\t\n\t\twhile(cparts.length) {\n\t\t\tpparts.push(cparts.shift())\n\t\t}\n\t\treturn pparts.join('/')\n\t}\n\tif(currentPath.indexOf('./') == 0 ) {\n\t\tcparts.shift()\n\t\tpparts.pop()\n\t\twhile(cparts.length) {\n\t\t\tpparts.push(cparts.shift())\n\t\t}\n\t\treturn pparts.join('/')\n\t}\n\t\n\treturn currentPath\n}\n\nmodule.exports = calculateRelativePath","\nconst resolveDataPath = require('./resolve-data-path')\nfunction evaluateInContext(context, expression, dataFunctions, globalData) {\n\tif (!expression) {\n\t\treturn null\n\t}\n\tif (typeof expression === 'string') {\n\t\texpression = expression.trim()\n\t}\n\n\tif (expression === '$this' || expression === 'this') {\n\t\treturn context\n\t}\n\tif (typeof context === 'object' && expression in context) {\n\t\treturn context[expression]\n\t}\n\tif (expression === '\"\"' || expression === \"''\") {\n\t\treturn ''\n\t}\n\tlet resolved = resolveDataPath(context, expression)\n\tif (resolved === null || resolved === undefined) {\n\t\tresolved = resolveDataPath({\n\t\t\t'$globals': globalData\n\t\t}, expression)\n\t}\n\tif (resolved === null || resolved === undefined) {\n\t\tresolved = _evaluateInContext.call(context, context, expression, dataFunctions, globalData)\n\t}\n\treturn resolved\n}\n\nlet evalFunction = new Function('additionalContexts',\n\t`with ({\n\t\t'$globals': additionalContexts.globalData\n\t}) {\n\t\twith (additionalContexts.dataFunctions) {\n\t\t\twith (additionalContexts.context) {\n\t\t\t\ttry {\n\t\t\t\t\treturn eval(additionalContexts.expression);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}`\n)\n\nfunction _evaluateInContext(context, expression, dataFunctions, globalData) {\n\tdataFunctions = dataFunctions || {}\n\tglobalData = globalData || {}\n\n\n\tlet result = evalFunction.call(this, {\n\t\tglobalData: globalData\n\t\t, dataFunctions: dataFunctions\n\t\t, context: context\n\t\t, expression: expression\n\t})\n\treturn result\n}\n\nmodule.exports = evaluateInContext","\nlet ActiveElement = require('./active-element')\nvar calculateRelativePath = require('./calculate-relative-path')\nlet evaluateInContext = require('./evaluate-in-context')\n\nclass ExecutionContext {\n\t/**\n\t * \n\t * @param {Tripartite} tripartite \n\t * @param {function} template \n\t * @param {stream} [destination]\n\t */\n\tconstructor(tripartite, template, data = {}, destination = '', dataFunctions = {}) {\n\t\tthis.tripartite = tripartite\n\t\tthis.template = template\n\t\tthis.destination = destination\n\t\tthis.initialData = data\n\t\tthis.currentData = []\n\t\tthis.dataFunctions = dataFunctions\n\t\tthis.continueOnTripartiteError = true\n\t\t\n\t\t// Sometimes large pages have so many elements that we exceed\n\t\t// the maximum call depth. This happens when we have a lot of elements all being\n\t\t// rendered by the same templates. That is, there's no async callback when a template\n\t\t// is loaded, only instant callbacks.\n\t\t// The downside to doing very frequent async calls is that it takes a lot longer to\n\t\t// to get called from a setTimeout than it does to call directly. We want ot keep\n\t\t// the time between needing to do that reasonably long. Unfortunately, there's no\n\t\t// easy/fast way to detect the call stack depth, so we rely on this proxy.\n\t\tthis.callCount = 0\n\t\tthis.callDepthLimit = 1000\n\t}\n\n\t/**\n\t * \n\t * @param {function} [callback] called when done\n\t * @returns Returns the string of stream as the result of the operation\n\t */\n\trun(callback) {\n\t\tlet ourCallback\n\t\tif (callback) {\n\t\t\tourCallback = () => {\n\t\t\t\tcallback(null, this.destination)\n\t\t\t}\n\t\t}\n\n\t\tthis._run(this.template, this.initialData, ourCallback)\n\n\t\treturn this.destination\n\t}\n\n\t_resolveHandlingExpression(template, handlingExpression, data) {\n\t\tif (!handlingExpression) {\n\t\t\thandlingExpression = defaultTemplateName\n\t\t}\n\t\tif (handlingExpression.charAt(0) == '$') {\n\t\t\t// Indicates the handling espression is not a literal template name but is a string which should\n\t\t\t// be evaluated to determine the template name\n\t\t\thandlingExpression = evaluateInContext(data, handlingExpression.substring(1), this.dataFunctions, this.initialData)\n\t\t}\n\t\t// resolve relative template paths\n\t\tif (handlingExpression.indexOf('./') == 0 || handlingExpression.indexOf('../') == 0) {\n\t\t\thandlingExpression = calculateRelativePath(template.templateMeta.name, handlingExpression)\n\t\t}\n\n\t\treturn handlingExpression\n\t}\n\n\t_run(template, data, callback) {\n\t\tlet parts = [...template.parts].reverse()\n\t\tconst processParts = () => {\n\t\t\t\n\t\t\t// check to see how far down in the call stack we are. If too far down,\n\t\t\t// come back in the next tick.\n\t\t\tthis.callCount++\n\t\t\tif(this.callCount++ > this.callDepthLimit) {\n\t\t\t\tsetTimeout(()=> {\n\t\t\t\t\tthis.callCount = 0\n\t\t\t\t\tprocessParts()\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif (parts.length > 0) {\n\t\t\t\tlet part = parts.pop()\n\t\t\t\tif (typeof part === 'string') {\n\t\t\t\t\tthis.output(part)\n\t\t\t\t\tprocessParts()\n\t\t\t\t}\n\t\t\t\telse if (part instanceof ActiveElement) {\n\t\t\t\t\tlet conditional = part.conditionalExpression || part.dataExpression\n\t\t\t\t\tlet conditionalResult = false\n\t\t\t\t\tlet resultData\n\t\t\t\t\tif (conditional == null || conditional == undefined || conditional === '') {\n\t\t\t\t\t\t// Because if they didn't specify a condition or data, they probably \n\t\t\t\t\t\t// just want the template to be run as is\n\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif(part.conditionalExpression) {\n\t\t\t\t\t\t\tlet result = evaluateInContext(data, part.conditionalExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t\tif (result) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This means we're evaluating the data expression to see if we should run the template\n\t\t\t\t\t\t\tresultData = evaluateInContext(data, part.dataExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t\tif(resultData === null || resultData === undefined) {\n\t\t\t\t\t\t\t\tconditionalResult = false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (typeof resultData === 'number') {\n\t\t\t\t\t\t\t\t// if the result is a number, any number, we want to output it\n\t\t\t\t\t\t\t\t// unless the number is from the conditional expression, in which\n\t\t\t\t\t\t\t\t// case we want to evaluate it as truthy\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(Array.isArray(resultData) && resultData.length > 0) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(resultData) {\n\t\t\t\t\t\t\t\tconditionalResult = true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif (conditionalResult) {\n\t\t\t\t\t\tif (part.dataExpression && resultData === undefined) {\n\t\t\t\t\t\t\tresultData = evaluateInContext(data, part.dataExpression, this.dataFunctions, this.initialData)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(resultData === null || resultData === undefined) {\n\t\t\t\t\t\t\tresultData = data\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet handlingExpression = this._resolveHandlingExpression(template, part.handlingExpression, data)\n\t\t\t\t\t\tlet handlingTemplate\n\t\t\t\t\t\tlet children = (Array.isArray(resultData) ? [...resultData] : [resultData]).reverse()\n\t\t\t\t\t\tconst applyTemplate = () => {\n\t\t\t\t\t\t\tif (children.length > 0) {\n\t\t\t\t\t\t\t\tlet child = children.pop()\n\t\t\t\t\t\t\t\tthis._run(handlingTemplate, child, () => {\n\t\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(handlingExpression in this.tripartite.templates) {\n\t\t\t\t\t\t\thandlingTemplate = this.tripartite.getTemplate(handlingExpression)\n\t\t\t\t\t\t\tif (handlingTemplate) {\n\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// the template has been loaded before but is empty\n\t\t\t\t\t\t\t\tif (this.continueOnTripartiteError) {\n\t\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.tripartite.loadTemplate(handlingExpression, (template) => {\n\t\t\t\t\t\t\t\tif (!template) {\n\t\t\t\t\t\t\t\t\tlet msg = 'Could not load template: ' + handlingExpression\n\t\t\t\t\t\t\t\t\tconsole.error(msg)\n\t\t\t\t\t\t\t\t\tif (this.continueOnTripartiteError) {\n\t\t\t\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tlet err = new Error(msg)\n\t\t\t\t\t\t\t\t\t\tif (callback) {\n\t\t\t\t\t\t\t\t\t\t\tcallback(err)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tthrow err\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\thandlingTemplate = template\n\t\t\t\t\t\t\t\t\tapplyTemplate()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof part === 'function') {\n\t\t\t\t\tif(part.write) {\n\t\t\t\t\t\tpart.write(data, this.destination, () => {\n\t\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t\t})\n\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.output(part(data))\n\t\t\t\t\t\tprocessParts()\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprocessParts()\n\t}\n\n\t/**\n\t * \n\t * @param {string} value \n\t */\n\toutput(value) {\n\t\tif(value === null || value === undefined) {\n\t\t\treturn\n\t\t}\n\t\tif (typeof this.destination === 'string') {\n\t\t\tthis.destination += value\n\t\t}\n\t\telse if (this.destination.write) {\n\t\t\tthis.destination.write(value)\n\t\t}\n\t}\n}\n\n\nmodule.exports = ExecutionContext","/*\nfunction resolveDataPath(data, path) {\n\tif(data === null || data === undefined) {\n\t\treturn data\n\t}\n\tlet parts\n\tif(typeof path === 'string') {\n\t\tparts = path.trim().split('.')\n\t}\n\telse if(Array.isArray(path)) {\n\t\tparts = path\n\t}\n\t\n\tlet name = parts.shift()\n\tif(name.indexOf(' ') > -1) {\n\t\t// there's a space, which means it's really unlikely it's a property\n\t\treturn null\n\t}\n\tlet child\n\tif(name === 'this' || name === '$this') {\n\t\tchild = data\n\t}\n\telse if(typeof data === 'object') {\n\t\tif(name in data) {\n\t\t\tchild = data[name]\n\t\t}\n\t}\n\tif(parts.length > 0) {\n\t\treturn resolveDataPath(child, parts)\n\t}\n\telse {\n\t\treturn child\n\t}\n} */\nfunction resolveDataPath(data, path) {\n\tif (data === null || data === undefined) {\n\t\treturn data\n\t}\n\tlet parts\n\tif (typeof path === 'string') {\n\t\tparts = path.trim().split('.')\n\t}\n\telse if (Array.isArray(path)) {\n\t\tparts = path\n\t}\n\n\twhile (parts.length > 0) {\n\t\tlet name = parts.shift()\n\t\tif (name.indexOf(' ') > -1) {\n\t\t\t// there's a space, which means it's really unlikely it's a property\n\t\t\treturn null\n\t\t}\n\t\tlet child\n\t\tif (name === 'this' || name === '$this') {\n\t\t\tchild = data\n\t\t}\n\t\telse if (typeof data === 'object') {\n\t\t\tif (name in data) {\n\t\t\t\tchild = data[name]\n\t\t\t}\n\t\t}\n\t\tif (parts.length == 0) {\n\t\t\treturn child\n\t\t}\n\t\tdata = child\n\t}\n}\n\nmodule.exports = resolveDataPath","\n\n\nif (typeof String.prototype.trim !== 'function') {\n\tString.prototype.trim = function () {\n\t\treturn this.replace(/^\\s+|\\s+$/g, '');\n\t}\n}\n\n\nfunction isStream(stream) {\n\treturn stream !== null\n\t\t&& typeof stream === 'object'\n\t\t&& typeof stream.pipe === 'function';\n}\n\n\nfunction isTemplate(obj) {\n\tif (!obj) {\n\t\treturn false\n\t}\n\tif (typeof obj !== 'function') {\n\t\treturn false\n\t}\n\tif (!obj.write) {\n\t\treturn false\n\t}\n\tif (!obj.parts) {\n\t\treturn false\n\t}\n\tif (!obj.templateMeta) {\n\t\treturn false\n\t}\n\n\treturn true\n}\n\nlet ExecutionContext = require('./execution-context')\nlet ActiveElement = require('./active-element')\n\n\nclass Tripartite {\n\tconstructor(options = {}) {\n\t\tthis.templates = {\n\t\t\tdefaultTemplate: this._makeTemplate(function (thedata) {\n\t\t\t\treturn '' + thedata;\n\t\t\t})\n\t\t}\n\t\tlet { constants = {\n\t\t\ttemplateBoundary: '__',\n\t\t\ttemplateNameBoundary: '##'\n\t\t} } = options\n\t\tthis.constants = constants\n\n\t\t// This object (if set) will receive the template functions parsed from a script\n\t\t// I want to be able to call my templates as global functions, so I've set it\n\t\t// to be the window object\n\t\tthis.secondaryTemplateFunctionObject = options.secondaryTemplateFunctionObject\n\n\t\tthis.loaders = options.loaders || []\n\n\t\tthis.dataFunctions = options.dataFunction || {}\n\t}\n\n\t_makeTemplate(transformationFunction) {\n\t\tif (isTemplate(transformationFunction)) {\n\t\t\treturn transformationFunction\n\t\t}\n\t\tlet tri = this\n\t\tlet f = function (thedata) {\n\t\t\tlet stream = null\n\t\t\tlet options = null\n\t\t\tlet callback = null\n\t\t\tfor (let i = 1; i < arguments.length; i++) {\n\t\t\t\tlet arg = arguments[i]\n\t\t\t\tif (isStream(arg)) {\n\t\t\t\t\tstream = arg\n\t\t\t\t}\n\t\t\t\telse if(typeof arg === 'function') {\n\t\t\t\t\tcallback = arg\n\t\t\t\t}\n\t\t\t\telse if(typeof arg === 'object') {\n\t\t\t\t\toptions = arg\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn f.write(thedata, stream, callback, options)\n\t\t}\n\t\tf.write = function (thedata, stream, callback, options = {}) {\n\t\t\tif(transformationFunction && transformationFunction.write) {\n\t\t\t\t// if it's not a template, but has a write method, invoke the right method directly\n\t\t\t\treturn transformationFunction.write.apply(transformationFunction, arguments)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet dest = stream || ''\n\n\t\t\t\tlet context = new ExecutionContext(tri, f, thedata, dest, tri.dataFunctions)\n\t\t\t\tif (options && 'continueOnTripartiteError' in options) {\n\t\t\t\t\tcontext.continueOnTripartiteError = options.continueOnTripartiteError\n\t\t\t\t}\n\n\t\t\t\treturn context.run(callback)\n\t\t\t}\n\t\t}\n\t\tf.parts = []\n\t\tif (transformationFunction && typeof transformationFunction === 'function') {\n\t\t\tf.parts.push(transformationFunction)\n\t\t}\n\t\tf.templateMeta = {}\n\t\treturn f\n\t}\n\n\taddTemplate(name, template) {\n\t\tif (typeof template === 'string') {\n\t\t\ttemplate = this.parseTemplate(template);\n\t\t}\n\t\telse if (typeof template === 'function') {\n\t\t\ttemplate = this._makeTemplate(template)\n\t\t}\n\n\t\tthis.templates[name] = template;\n\t\ttemplate.templateMeta = template.templateMeta || {}\n\t\ttemplate.templateMeta.name = name\n\t\treturn template;\n\t}\n\n\tcreateBlank() {\n\t\treturn new Tripartite()\n\t}\n\n\tgetTemplate(name) {\n\t\treturn this.templates[name]\n\t}\n\n\tloadTemplate(name, callback) {\n\t\tif (name in this.templates) {\n\t\t\tcallback(this.templates[name])\n\t\t}\n\t\telse {\n\t\t\tlet tri = this\n\t\t\tlet count = this.loaders.length\n\t\t\tlet done = false\n\n\t\t\tif (count == 0) {\n\t\t\t\ttri.templates[name] = null\n\t\t\t\tcallback(tri.getTemplate(name))\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.loaders.forEach(loader => {\n\t\t\t\t\tif (done) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tloader(name, template => {\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcount--\n\t\t\t\t\t\tif (template) {\n\t\t\t\t\t\t\tdone = true\n\t\t\t\t\t\t\ttri.addTemplate(name, template)\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (count == 0) {\n\t\t\t\t\t\t\tdone = true\n\t\t\t\t\t\t\ttri.templates[name] = null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (done) {\n\t\t\t\t\t\t\tcallback(tri.getTemplate(name))\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\tparseTemplateScript(tx) {\n\t\tvar tks = this.tokenizeTemplateScript(tx);\n\t\t/* current template name */\n\t\tvar ctn = null;\n\t\tfor (var i = 0; i < tks.length; i++) {\n\t\t\tvar token = tks[i];\n\t\t\tif (token.active) {\n\t\t\t\tctn = token.content;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ctn) {\n\t\t\t\t\tvar template = this.addTemplate(ctn, this.stripTemplateWhitespace(token.content));\n\t\t\t\t\tif (this.secondaryTemplateFunctionObject) {\n\t\t\t\t\t\tthis.secondaryTemplateFunctionObject[ctn] = template;\n\t\t\t\t\t}\n\t\t\t\t\tctn = null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstripTemplateWhitespace(txt) {\n\t\tvar i = txt.indexOf('\\n');\n\t\tif (i > -1 && txt.substring(0, i).trim() == '') {\n\t\t\ttxt = txt.substring(i + 1);\n\t\t}\n\t\ti = txt.lastIndexOf('\\n');\n\t\tif (i > -1 && txt.substring(i).trim() == '') {\n\t\t\ttxt = txt.substring(0, i);\n\t\t}\n\t\treturn txt;\n\t}\n\n\t/* simple template */\n\t_createActiveElement(/* conditional expression */ cd, data, /* handling expression */ hd, tripartite, templateMeta) {\n\t\tlet el = new ActiveElement(cd, data, hd, tripartite);\n\t\tel.templateMeta = templateMeta\n\t\treturn el\n\t}\n\tpt(tx) {\n\t\treturn this.parseTemplate(tx)\n\t}\n\t/* parse template */\n\tparseTemplate(tx) {\n\t\tvar tks = this.tokenizeTemplate(tx);\n\t\tlet t = this._makeTemplate()\n\t\tvar templateMeta = t.templateMeta\n\n\t\tfor (let tk of tks) {\n\t\t\tif (tk.active) {\n\t\t\t\tt.parts.push(this.tokenizeActivePart(tk.content, templateMeta));\n\t\t\t}\n\t\t\telse if (tk.content) {\n\t\t\t\tt.parts.push(tk.content);\n\t\t\t}\n\t\t}\n\n\t\treturn t\n\t}\n\n\ttokenizeActivePart(tx, templateMeta) {\n\t\tvar con = null;\n\t\tvar dat = null;\n\t\tvar han = null;\n\n\t\t/* condition index */\n\t\tvar ci = tx.indexOf('??');\n\t\tif (ci > -1) {\n\t\t\tcon = tx.substring(0, ci);\n\t\t\tci += 2;\n\t\t}\n\t\telse {\n\t\t\tci = 0;\n\t\t}\n\n\t\t/* handler index */\n\t\tvar hi = tx.indexOf('::');\n\t\tif (hi > -1) {\n\t\t\tdat = tx.substring(ci, hi);\n\t\t\than = tx.substring(hi + 2);\n\t\t}\n\t\telse {\n\t\t\tdat = tx.substring(ci);\n\t\t}\n\t\treturn this._createActiveElement(con, dat, han, this, templateMeta);\n\t}\n\n\ttokenizeTemplate(tx) {\n\t\treturn this.tokenizeActiveAndInactiveBlocks(tx, this.constants.templateBoundary);\n\t}\n\n\n\t/** tokenize template script */\n\ttokenizeTemplateScript(tx) {\n\t\treturn this.tokenizeActiveAndInactiveBlocks(tx, this.constants.templateNameBoundary);\n\t}\n\n\t/* tokenize active and inactive blocks */\n\ttokenizeActiveAndInactiveBlocks(text, /*Active Region Boundary */ boundary) {\n\t\t/* whole length */\n\t\tlet length = text.length\n\n\t\t/* current position */\n\t\tlet position = 0\n\n\t\t/* are we in an active region */\n\t\tlet act = false\n\n\t\tlet tokens = []\n\n\t\twhile (position < length) {\n\t\t\tlet i = text.indexOf(boundary, position);\n\t\t\tif (i == -1) {\n\t\t\t\ti = length;\n\t\t\t}\n\t\t\tvar tk = { active: act, content: text.substring(position, i) };\n\t\t\ttokens.push(tk);\n\t\t\tposition = i + boundary.length;\n\t\t\tact = !act;\n\t\t}\n\n\t\treturn tokens;\n\t}\n\n}\nvar tripartiteInstance = new Tripartite()\n\nif (typeof window != 'undefined') {\n\ttripartiteInstance.secondaryTemplateFunctionObject = window\n}\n\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = tripartiteInstance\n}\nelse {\n\twindow.Tripartite = tripartiteInstance\n}\n\nif (typeof global != 'undefined') {\n\tif (!global.Tripartite) {\n\t\tglobal.Tripartite = Tripartite\n\t}\n\tif (!global.tripartite) {\n\t\tglobal.tripartite = tripartiteInstance\n\t}\n}\n\n","var tri = require(\"tripartite\"); var t = \"<div class=\\\"player-controls lib-player\\\">\\n\\n\\t<div class=\\\"library\\\">\\n\\t\\t<div class=\\\"kalpa-tree\\\">\\n\\t\\t<\\/div>\\n\\t\\t<div class=\\\"lib-controls\\\">\\n\\t\\t\\t<div class=\\\"filter\\\">\\n\\t\\t\\t\\t<input name=\\\"libFilter\\\" type=\\\"text\\\" placeholder=\\\"search\\\" \\/>\\n\\t\\t\\t<\\/div>\\n\\t\\t\\t\\n\\t\\t<\\/div>\\n\\n\\t\\t<!-- <div class=\\\"drop-zone\\\">\\n\\t\\t\\tdrop files here\\t\\n\\t\\t<\\/div> -->\\n\\t<\\/div>\\n\\t<div class=\\\"selected-details\\\">\\n\\t\\t\\n\\t<\\/div>\\n\\t<div class=\\\"playside\\\">\\n\\t\\t<div class=\\\"playlist-wrapper\\\">\\n\\t\\t\\t<div class=\\\"playlist webhandle-drag-sortable-list\\\">\\n\\t\\t\\t<\\/div>\\n\\t\\t\\t<div class=\\\"playlist-bottom-buttons actions\\\">\\n\\t\\t\\t\\t<div class=\\\"left\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"previous\\\" title=\\\"previous track\\\">\\n\\t\\t\\t\\t\\t\\t__::.\\/previous-button__\\n\\t\\t\\t\\t\\t<\\/button>\\n\\t\\t\\t\\t<\\/div>\\n\\t\\t\\t\\t<div class=\\\"right\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"next\\\" title=\\\"next track\\\">\\n\\t\\t\\t\\t\\t\\t__::.\\/next-button__\\n\\t\\t\\t\\t\\t<\\/button>\\n\\n\\t\\t\\t\\t<\\/div>\\n\\t\\t\\t<\\/div>\\n\\t\\t<\\/div>\\n\\t\\t<div class=\\\"track-controls\\\">\\n\\t\\t\\t<div class=\\\"track-title\\\">\\n\\t\\t\\t<\\/div>\\n\\t\\t\\t<div class=\\\"position\\\">\\n\\t\\t\\t\\t<div class=\\\"play-pause actions\\\">\\n\\t\\t\\t\\t\\t<button class=\\\"play\\\" title=\\\"play \\/ pause\\\">\\n\\t\\t\\t\\t\\t\\t__::.\\/play-pause-button__\\n\\t\\t\\t\\t\\t<\\/button>\\n\\t\\t\\t\\t<\\/div>\\n\\t\\t\\t\\t<label>\\n\\t\\t\\t\\t\\t<input type=\\\"range\\\" name=\\\"position\\\" min=\\\"0\\\" max=\\\"1000\\\" value=\\\"0\\\" \\/>\\n\\t\\t\\t\\t<\\/label>\\n\\t\\t\\t\\t<div class=\\\"position-text\\\">\\n\\n\\t\\t\\t\\t<\\/div>\\n\\t\\t\\t<\\/div>\\n\\t\\t\\t<div class=\\\"global-controls\\\">\\n\\t\\t\\t\\t<div class=\\\"volume\\\">\\n\\t\\t\\t\\t\\t<label>\\n\\t\\t\\t\\t\\t\\t<input type=\\\"range\\\" name=\\\"volume\\\" min=\\\"0\\\" max=\\\"100\\\" value=\\\"100\\\" \\/>\\n\\t\\t\\t\\t\\t\\tVolume\\n\\t\\t\\t\\t\\t<\\/label>\\n\\t\\t\\t\\t<\\/div>\\n\\t\\t\\t<\\/div>\\n\\t\\t<\\/div>\\n\\t<\\/div>\\n<\\/div>\\n\\n<\\/div>\"; \nmodule.exports = tri.addTemplate(\"dankolz/audio-player/controls\", t); ","var tri = require(\"tripartite\"); var t = \"<svg class=\\\"next-button-svg\\\" xmlns=\\\"http:\\/\\/www.w3.org\\/2000\\/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#5f6368\\\"><path d=\\\"M660-240v-480h80v480h-80Zm-440 0v-480l360 240-360 240Zm80-240Zm0 90 136-90-136-90v180Z\\\"\\/><\\/svg>\"; \nmodule.exports = tri.addTemplate(\"dankolz/audio-player/next-button\", t); ","var tri = require(\"tripartite\"); var t = \"\\n<svg class=\\\"play-pause-button-svg\\\" xmlns=\\\"http:\\/\\/www.w3.org\\/2000\\/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#5f6368\\\"><path d=\\\"M200-312v-336l240 168-240 168Zm320-8v-320h80v320h-80Zm160 0v-320h80v320h-80Z\\\"\\/><\\/svg>\"; \nmodule.exports = tri.addTemplate(\"dankolz/audio-player/play-pause-button\", t); ","var tri = require(\"tripartite\"); var t = \"<svg class=\\\"previous-button-svg\\\" xmlns=\\\"http:\\/\\/www.w3.org\\/2000\\/svg\\\" height=\\\"24px\\\" viewBox=\\\"0 -960 960 960\\\" width=\\\"24px\\\" fill=\\\"#5f6368\\\"><path d=\\\"M220-240v-480h80v480h-80Zm520 0L380-480l360-240v480Zm-80-240Zm0 90v-180l-136 90 136 90Z\\\"\\/><\\/svg>\"; \nmodule.exports = tri.addTemplate(\"dankolz/audio-player/previous-button\", t); ","var tri = require(\"tripartite\"); var t = \"This is test1.tri\\n\"; \nmodule.exports = tri.addTemplate(\"test1\", t); ","var tri = require(\"tripartite\"); var t = \"This is test2.tri\\n__::.\\/test1__\\n\"; \nmodule.exports = tri.addTemplate(\"test2\", t); ","import tri from 'tripartite';\nimport {test1, test2} from \"../views/load-browser-views.js\"\n\nexport default function go() {\n\tconsole.log(test2())\n\n\t// and use like:\n\tlet d = document.createElement('div')\n\td.innerHTML = tri.getTemplate('test1')({\n\t\tkey1: 'value'\n\t\t, key2: 'value'\n\t})\n\tdocument.body.append(d)\n}\n\nexport function stop() {\n\tconsole.log('stop')\n}","\nimport { View } from '@webhandle/backbone-view'\nimport makeTree from 'kalpa-tree-on-page'\nimport Emitter from '@webhandle/minimal-browser-event-emitter'\nimport DataItemWorker from '@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs'\n\nlet dataItemWorker = new DataItemWorker()\n\nlet counter = 1\n\nexport default class LibraryView extends View {\n\n\t/**\n\t * Setup the event listners and default objects.\n\t * @param {Object} options \n\t */\n\tpreinitialize(options = {}) {\n\t\tthis.events = Object.assign({}, {\n\t\t\t'dragover .': 'handleDropzoneDragover'\n\t\t\t, 'drop .': 'handleDropzoneDrop'\n\t\t\t, 'dragstart .kalpa-tree li.node': 'handleNodeDragStart'\n\t\t\t, 'keydown input[name=\"libFilter\"]': 'handleSearch'\n\t\t\t, 'change input[name=\"libFilter\"]': 'handleSearch'\n\t\t\t// , 'dragover .drop-zone': 'handleDropzoneDragover'\n\t\t\t// , 'drop .drop-zone': 'handleDropzoneDrop'\n\t\t\t// , 'dragover .kalpa-tree': 'handleDropzoneDragover'\n\t\t\t// , 'drop .kapla-tree': 'handleDropzoneDrop'\n\n\t\t}, options.events)\n\t\toptions.events = this.events\n\t\tif (!this.emitter) {\n\t\t\tthis.emitter = options.emitter || new Emitter()\n\t\t}\n\t\tthis.nodesEmitter = new Emitter()\n\t\tthis.nodesByPath = {}\n\t\t\n\t\tthis.uniquify = 1\n\t}\n\t\n\tgetFullPath(path) {\n\t\tlet parts = path.split('/').filter(item => !!item)\n\t\treturn parts.join('/')\n\t}\n\tgetParentPath(path) {\n\t\tlet parts = path.split('/').filter(item => !!item)\n\t\tif(parts.length < 2) {\n\t\t\treturn ''\n\t\t}\n\t\tparts.pop()\n\t\treturn parts.join('/')\n\t}\n\t\n\n\tgetTreePathParts(path) {\n\t\tlet extExp = /(.*)(\\..{3,4})$/i\n\t\tlet segments = path.match(extExp)\n\t\tif(segments) {\n\t\t\tpath = segments[1]\n\t\t}\n\t\tlet pathParts = path.split('/').filter(item => !!item)\n\t\tlet name = pathParts.pop()\n\t\tlet nameParts = name.split(' - ').filter(item => !!item).map(item => item.trim())\n\t\t\n\t\tlet pathInfo = {\n\n\t\t}\n\t\tif(nameParts.length == 4) {\n\t\t\tpathInfo.artist = nameParts[0]\n\t\t\tpathInfo.album = nameParts[1]\n\t\t\tpathInfo.trackNum = nameParts[2]\n\t\t\tpathInfo.name = nameParts[3]\n\t\t}\n\t\telse if(nameParts.length == 3) {\n\t\t\tpathInfo.artist = nameParts[0]\n\t\t\tpathInfo.album = nameParts[1]\n\t\t\tpathInfo.name = nameParts[2]\n\t\t}\n\t\telse if(nameParts.length == 2) {\n\t\t\tpathInfo.artist = nameParts[0]\n\t\t\tpathInfo.name = nameParts[1]\n\t\t}\n\t\telse if(nameParts.length > 4) {\n\t\t\tpathInfo.artist = nameParts[0]\n\t\t\tpathInfo.album = nameParts[1]\n\t\t\tpathInfo.trackNum = nameParts[2]\n\t\t\tpathInfo.name = nameParts[nameParts.length - 1]\n\t\t}\n\t\telse if(nameParts.length == 1) {\n\t\t\tpathInfo.name = nameParts[0]\n\t\t\t\n\t\t\tif(pathParts.length > 0) {\n\t\t\t\tpathInfo.artist = pathParts[pathParts.length - 1]\n\t\t\t}\n\t\t}\n\n\t\treturn pathInfo\n\t}\n\t\n\n\n\tasync handleNodeDragStart(evt, selected) {\n\t\tlet id = selected.getAttribute('data-id')\n\t\tlet dataNode = this.tree.get(id)\n\n\t\tevt.dataTransfer.setData('text', dataNode.data.name)\n\n\t\tlet label = `data:text/label,${dataNode.label}`\n\t\tevt.dataTransfer.setData(label, label)\n\n\t\tevt.dataTransfer.setData('data:text/mode', 'external-drag')\n\t\tthis.emitter.emit('external-file-item-drag', {\n\t\t\taction: 'external-file-item-drag'\n\t\t\t, data: [dataNode].map(node => node.data)\n\t\t})\n\t}\n\n\thandleSearch(evt, selected) {\n\t\t// evt.preventDefault()\n\t\t// evt.stopPropagation()\n\t\tsetTimeout(() => {\n\t\t\tthis.tree.search(selected.value)\n\n\t\t}, 1)\n\t}\n\t/**\n\t * Watch for movement of something being dragged\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDropzoneDragover(evt, selected) {\n\t\tevt.preventDefault()\n\t\tevt.stopPropagation()\n\t}\n\t/**\n\t * Creates permanent cells for external items dropped into the list,\n\t * emits events, and does cleaup\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDropzoneDrop(evt, selected) {\n\t\tevt.preventDefault()\n\n\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\tlet uriList\n\t\t\tif (evt.dataTransfer) {\n\t\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t\t}\n\n\t\t\tif (uriList) {\n\t\t\t\t// if a link is dropped, there's no exteralDrag object, just a drop object\n\n\t\t\t\tif (typeof uriList == 'string') {\n\t\t\t\t\t// Acording to the spec, this should be a list with one uri on every line\n\t\t\t\t\t// In practice, it seems like the browser is eating the return characters\n\t\t\t\t\t// In my tests, I'm passing multiple uris as comma separated. I'm handling\n\t\t\t\t\t// both cases here.\n\t\t\t\t\tlet parts = [uriList]\n\t\t\t\t\tfor (let sep of ['\\r\\n', '\\n', ',']) {\n\t\t\t\t\t\tlet newParts = []\n\t\t\t\t\t\tfor (let part of parts) {\n\t\t\t\t\t\t\tnewParts.push(...part.split(sep))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparts = newParts\n\t\t\t\t\t}\n\t\t\t\t\turiList = parts\n\t\t\t\t}\n\t\t\t\tcells = this.createCellsForUriList(uriList)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet files = await dataItemWorker.getFileEntriesFromEvent(evt, {\n\t\t\t\t\tkeepDirectories: false\n\t\t\t\t\t, recursive: true\n\t\t\t\t})\n\t\t\t\tlet newNodesPaths = new Set()\n\t\t\t\tfor (let file of files) {\n\t\t\t\t\tlet parentId = 0\n\t\t\t\t\tlet treePath = this.getTreePathParts(file.fullPath)\n\t\t\t\t\tlet parentPath = treePath.album ? treePath.artist + '/' + treePath.album : treePath.artist\n\t\t\t\t\tlet parent = this.nodesByPath[parentPath]\n\t\t\t\t\t\n\t\t\t\t\tlet artistNode\n\t\t\t\t\tlet albumNode\n\t\t\t\t\tif(!parent && treePath.artist) {\n\t\t\t\t\t\tartistNode = this.nodesByPath[treePath.artist]\n\t\t\t\t\t\tif(!artistNode) {\n\t\t\t\t\t\t\tartistNode = {\n\t\t\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t\t\t\t, id: counter++\n\t\t\t\t\t\t\t\t, label: treePath.artist\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tthis.nodesByPath[treePath.artist] = artistNode\n\t\t\t\t\t\t\tnewNodesPaths.add(treePath.artist)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(treePath.album) {\n\t\t\t\t\t\t\t// This can't exist yet otherwise we would have found it as the parent\n\t\t\t\t\t\t\talbumNode = {\n\t\t\t\t\t\t\t\tparentId: artistNode.id\n\t\t\t\t\t\t\t\t, id: counter++\n\t\t\t\t\t\t\t\t, label: treePath.album\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.nodesByPath[parentPath] = albumNode\n\t\t\t\t\t\t\tnewNodesPaths.add(parentPath)\n\t\t\t\t\t\t\tparent = albumNode\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tparent = artistNode\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(parent) {\n\t\t\t\t\t\tparentId = parent.id\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet add = {\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t\t, id: counter++\n\t\t\t\t\t\t, label: treePath.name\n\t\t\t\t\t\t, file: file\n\t\t\t\t\t\t, data: file\n\t\t\t\t\t\t, mediaMeta: treePath\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlet path = (parentPath ? parentPath + '/' : '') + treePath.name\n\t\t\t\t\t\n\t\t\t\t\tif(path in this.nodesByPath) {\n\t\t\t\t\t\t// We already have a node with this path, maybe because a file has the same name as\n\t\t\t\t\t\t// a folder.\n\t\t\t\t\t\tpath += this.uniquify++\n\t\t\t\t\t}\n\t\t\t\t\tthis.nodesByPath[path] = add\n\t\t\t\t\tnewNodesPaths.add(path)\n\t\t\t\t}\n\t\t\t\tnewNodesPaths = [...newNodesPaths]\n\t\t\t\tnewNodesPaths.sort()\n\t\t\t\tfor(let path of newNodesPaths) {\n\t\t\t\t\tthis.nodesEmitter.emit('data', this.nodesByPath[path])\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn p\n\t}\n\t\n\tnodeSelectedFromTree(node) {\n\t\tthis.el.querySelector('input[name=\"libFilter\"]').value = null\n\n\t}\n\n\trender() {\n\t\tlet view = this\n\n\t\tmakeTree({\n\t\t\tstream: view.nodesEmitter\n\t\t\t, treeContainerSelector: '.player-controls .library .kalpa-tree'\n\t\t}).then(tree => {\n\t\t\tview.tree = tree\n\t\t\tlet rootNode = {\n\t\t\t\tid: 0\n\t\t\t\t, label: 'music'\n\t\t\t}\n\t\t\tview.nodesByPath[''] = rootNode\n\t\t\tview.nodesEmitter.emit('data', rootNode)\n\t\t\t\n\t\t\tthis.tree.on('select', (node) => {\n\t\t\t\tview.nodeSelectedFromTree(node)\n\t\t\t})\n\n\t\t\tlet updateDraggable = () => {\n\t\t\t\tview.el.querySelectorAll('.kalpa-tree li.node').forEach(node => node.setAttribute('draggable', true))\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tview.el.querySelectorAll('.kalpa-tree li.node').forEach(node => node.setAttribute('draggable', true))\n\t\t\t\t}, 200)\n\t\t\t}\n\t\t\ttree.on('rebind', updateDraggable)\n\t\t\ttree.on('rebind:exit', updateDraggable)\n\t\t})\n\n\t}\n\n}","import { View } from '@webhandle/backbone-view'\nimport Emitter from '@webhandle/minimal-browser-event-emitter'\nimport {playerControls} from \"../views/load-browser-views.js\"\nimport DataItemWorker from '@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs'\n\nlet dataItemWorker = new DataItemWorker()\n\nlet counter = 1\n\nfunction isSet(val) {\n\treturn ! (val === null || val === undefined)\n}\nexport default class PlayControlsView extends View {\n\n\t/**\n\t * Setup the event listners and default objects.\n\t * @param {Object} options \n\t */\n\tpreinitialize(options = {}) {\n\t\tthis.events = Object.assign({}, {\n\t\t\t'click .play': 'handlePlay'\n\t\t\t, 'click .volumeBar': 'handleVolume'\n\t\t\t, 'click .next': 'handleNext'\n\t\t\t, 'click .previous': 'handlePrevious'\n\t\t\t, 'change input[name=\"volume\"]': 'handleVolume'\n\t\t\t, 'change input[name=\"position\"]': 'handlePosition'\n\t\t\t, 'mousedown input[name=\"volume\"]': 'updatesOff'\n\t\t\t, 'mouseup input[name=\"volume\"]': 'updatesOn'\n\t\t\t, 'mousedown input[name=\"position\"]': 'updatesOff'\n\t\t\t, 'mouseup input[name=\"position\"]': 'updatesOn'\n\t\t\t// , 'dragover .library': 'handleDropzoneDragover'\n\t\t\t// , 'drop .library': 'handleDropzoneDrop'\n\t\t\t// , 'dragstart .kalpa-tree li.node': 'handleNodeDragStart'\n\t\t\t// , 'dragover .drop-zone': 'handleDropzoneDragover'\n\t\t\t// , 'drop .drop-zone': 'handleDropzoneDrop'\n\t\t\t// , 'dragover .kalpa-tree': 'handleDropzoneDragover'\n\t\t\t// , 'drop .kapla-tree': 'handleDropzoneDrop'\n\n\t\t}, options.events)\n\t\toptions.events = this.events\n\t\tif (!this.emitter) {\n\t\t\tthis.emitter = options.emitter || new Emitter()\n\t\t}\n\t\tthis.emitter.on('status', this.handleStatusUpdate.bind(this))\n\t\tthis.updates = true\n\t\tthis.positionInputRange = 1000\n\t}\n\t\n\t\n\t\n\tupdatesOff() {\n\t\tthis.updates = false\n\t}\n\t\n\tupdatesOn() {\n\t\tthis.updates = true\n\t}\n\t\n\t_makeSecondsClock(seconds) {\n\t\tif(Number.isNaN(seconds)) {\n\t\t\treturn '--'\n\t\t}\n\t\tlet result = []\n\t\tseconds = parseInt(seconds)\n\t\tlet s = seconds % 60\n\t\tseconds = parseInt((seconds - s) / 60)\n\t\tlet m = seconds % 60\n\t\tif(m) {\n\t\t\tlet h = parseInt((seconds - m) / 60)\n\t\t\tif(h) {\n\t\t\t\tresult.push(h)\n\t\t\t}\n\t\t\tif(h && m < 10) {\n\t\t\t\tm = `${m}`.padStart(2, '0')\n\t\t\t}\n\t\t\tresult.push(m)\n\t\t}\n\t\telse {\n\t\t\tresult.push('0')\n\t\t}\n\t\t// if(m && s < 10) {\n\t\t\ts = `${s}`.padStart(2, '0')\n\t\t// }\n\t\tresult.push(s)\n\n\t\treturn result.join(':')\n\n\t}\n\t\n\thandleStatusUpdate(args) {\n\n\t\tif(!this.updates) {\n\t\t\t// In this case, somebody is doing something to components we'd want to update, like position,\n\t\t\t// so we're not going to do anything until that action is finished.\n\t\t\treturn\n\t\t}\n\t\tif(isSet(args.volume)) {\n\t\t\tthis.el.querySelector('input[name=\"volume\"]').value = parseInt(args.volume * 100)\n\t\t}\n\t\tif(isSet(args.currentTime) && isSet(args.duration)) {\n\t\t\tif(Number.isNaN(args.currentTime) || Number.isNaN(args.duration)) {\n\t\t\t\t// When loading a track, sometimes the audio object doesn't have all the numbers\n\t\t\t\tthis.el.querySelector('input[name=\"position\"]').value = 0\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.el.querySelector('input[name=\"position\"]').value = parseInt(args.currentTime / args.duration * this.positionInputRange)\n\t\t\t}\n\t\t\tthis.el.querySelector('.position-text').innerHTML = `${this._makeSecondsClock(args.currentTime)} / ${this._makeSecondsClock(args.duration)}`\n\t\t}\n\t\telse {\n\t\t\t// we're not really playing anything at this point, so don't give values\n\t\t\tthis.el.querySelector('input[name=\"position\"]').value = 0\n\t\t\tthis.el.querySelector('.position-text').innerHTML = ' -- / --'\n\t\t}\n\n\t\tif(isSet(args.title)) {\n\t\t\tthis.el.querySelector('.track-title').innerHTML = args.title\n\t\t}\n\t\telse {\n\t\t\tthis.el.querySelector('.track-title').innerHTML = ''\n\n\t\t}\n\t}\n\t\n\n\thandlePosition(evt, selected) {\n\t\tlet value = selected.value / this.positionInputRange\n\t\tthis.emitter.emit('position', {\n\t\t\taction: 'position'\n\t\t\t, value: value\n\t\t})\n\t}\n\thandleVolume(evt, selected) {\n\t\tlet value = selected.value / 100\n\t\tthis.emitter.emit('volume', {\n\t\t\taction: 'volume'\n\t\t\t, value: value\n\t\t})\n\t}\n\thandlePlay(evt, selected) {\n\t\tthis.emitter.emit('play-pause', {\n\t\t\taction: 'play-pause'\n\t\t})\n\t}\n\thandleNext(evt, selected) {\n\t\tthis.emitter.emit('next', {\n\t\t\taction: 'next'\n\t\t})\n\t}\n\thandlePrevious(evt, selected) {\n\t\tthis.emitter.emit('previous', {\n\t\t\taction: 'previous'\n\t\t})\n\t}\n\n\trender() {\n\t\tthis.el.innerHTML = playerControls()\n\t}\n}","import DataItemWorker from \"@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs\"\nlet dataItemWorker = new DataItemWorker()\n\nexport default class Player {\n\t/**\n\t * \n\t * @param {Object} options \n\t * @param {EventEmitter} options.controlEvents\n\t * @param {ListView} options.playlist\n\t * @param {Audio} [options.audio]\n\t */\n\tconstructor(options = {}) {\n\t\tObject.assign(this, {\n\t\t\taudio: new Audio()\n\n\t\t}, options)\n\t\t\n\t\tthis.controlEvents.on('play-pause', this.playPause.bind(this))\n\t\tthis.controlEvents.on('next', this.next.bind(this))\n\t\tthis.controlEvents.on('previous', this.previous.bind(this))\n\t\tthis.controlEvents.on('play-item', this.playItem.bind(this))\n\t\tthis.controlEvents.on('volume', this.volumeEvent.bind(this))\n\t\tthis.controlEvents.on('position', this.positionEvent.bind(this))\n\t\tthis.controlEvents.on('list-change', this.listChangeEvent.bind(this))\n\n\n\t\tthis.audio.addEventListener('ended', this.itemEndedEvent.bind(this))\n\t\tthis.audio.addEventListener('timeupdate', this.emitStatus.bind(this))\n\t}\n\t\n\t_createStatus() {\n\t\t\n\t\tlet status\n\t\tif(this.currentItem) {\n\t\t\tstatus = {\n\t\t\t\taction: 'status'\n\t\t\t\t, volume: this.audio.volume\n\t\t\t\t, duration: this.audio.duration\n\t\t\t\t, currentTime: this.audio.currentTime\n\t\t\t\t, playState: this._getAudioState()\n\t\t\t\t, currentItem: this.currentItem\n\t\t\t\t, title: this.currentItem.querySelector('.title').innerText\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstatus = {\n\t\t\t\taction: 'status'\n\t\t\t\t, volume: this.audio.volume\n\t\t\t\t, playState: 'off'\n\t\t\t}\n\t\t}\n\t\treturn status\n\t}\n\n\temitStatus() {\n\t\tthis.controlEvents.emit('status', this._createStatus())\n\t}\n\t\n\t_getAudioState() {\n\t\tif(this.audio.paused) {\n\t\t\treturn 'paused'\n\t\t}\n\t\tif(this.audio.ended) {\n\t\t\treturn 'ended'\n\t\t}\n\t\treturn 'playing'\n\t}\n\n\tlistChangeEvent(args) {\n\t\tif(args.type === 'remove') {\n\t\t\tif(args.cells[0] === this.currentItem) {\n\t\t\t\tthis.next()\n\t\t\t}\n\t\t}\n\t}\n\tvolumeEvent(args) {\n\t\tthis.audio.volume = args.value\n\t}\n\tpositionEvent(args) {\n\t\tlet status = this._createStatus()\n\t\tthis.audio.currentTime = args.value * status.duration\n\t}\n\titemEndedEvent() {\n\t\tthis.next()\n\t}\n\tplayItem(args) {\n\t\tthis._playCell(args.item)\n\t}\n\t_clearCurrent() {\n\t\tthis.playlist.getCells().forEach(cell => cell.classList.remove('current'))\n\t}\n\t_cleanupCurrent() {\n\t\tif(this.currentItem) {\n\t\t\tthis.currentItem.classList.remove('current')\n\t\t\tif(this.currentItem.objectUrl) {\n\t\t\t\tURL.revokeObjectURL(this.currentItem.objectUrl)\n\t\t\t}\n\t\t}\n\t\tif(this.audio) {\n\t\t\tthis.audio.pause()\n\t\t\tthis.audio.src = null\n\t\t}\n\t\tthis.emitStatus()\n\t}\n\t\n\tplayFile(file) {\n\t\tlet url = URL.createObjectURL(file)\n\t\tthis.audio.src = url\n\t\tthis.audio.load()\n\t\tthis.audio.play()\n\t\treturn url\n\t}\n\t\n\t_playCell(cell) {\n\t\tthis._cleanupCurrent()\n\t\tif(cell) {\n\t\t\tif(cell.classList) {\n\t\t\t\tcell.classList.add('current')\n\t\t\t}\n\t\t\tthis.currentItem = cell\n\t\t\tif(cell.data) {\n\t\t\t\tif(cell.data instanceof File) {\n\t\t\t\t\tcell.objectUrl = this.playFile(cell.data)\n\t\t\t\t}\n\t\t\t\telse if(cell.data.__proto__.toString() == '[object FileEntry]') {\n\t\t\t\t\tdataItemWorker.getFileFromEntry(cell.data).then(file => {\n\t\t\t\t\t\tcell.objectUrl = this.playFile(file)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if(typeof cell.data === 'string') {\n\t\t\t\t\t// I guess let's assume this is a url\n\t\t\t\t\tthis.audio.src = cell.data\n\t\t\t\t\tthis.audio.load()\n\t\t\t\t\tthis.audio.play()\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis.emitStatus()\n\t\t}\n\t\telse {\n\t\t\tdelete this.currentItem\n\t\t}\n\n\t}\n\t\n\tplayPause(args) {\n\t\tif(!this.currentItem) {\n\t\t\tlet cells = this.playlist.getCells()\n\t\t\tif(cells && cells.length > 0) {\n\t\t\t\tthis._playCell(cells[0])\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(this.audio.paused) {\n\t\t\t\tthis.audio.play()\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.audio.pause()\n\t\t\t}\n\t\t}\n\t}\n\tprevious(args) {\n\t\tif(this.currentItem && this.currentItem.previousElementSibling) {\n\t\t\tthis._playCell(this.currentItem.previousElementSibling)\n\t\t}\n\t}\n\tnext(args) {\n\t\tif(this.currentItem) {\n\t\t\tthis._playCell(this.currentItem.nextElementSibling)\n\t\t}\n\t}\n\n}","\nimport ListView from '@webhandle/drag-sortable-list'\nimport DataItemWorker from '@webhandle/drag-sortable-list/client-lib/data-item-worker.mjs'\n\nlet dataItemWorker = new DataItemWorker()\n\nexport default class PlaylistView extends ListView {\n\n\tpreinitialize(options = {}) {\n\t\tif(options.emitter) {\n\t\t\tthis.emitter = options.emitter\n\t\t}\n\t\tsuper.preinitialize(options)\n\t\tthis.events['dblclick .cell'] = 'doubleClick'\n\t\tthis.events['click .remove'] = 'removeCell'\n\t\t\n\t\tthis.emitter.on('external-file-item-drag', (evt) => {\n\t\t\tthis.externalDragData = evt.data\n\t\t})\n\t}\n\tdoubleClick(evt, selected) {\n\t\tthis.emitter.emit('play-item', {\n\t\t\titem: selected\n\t\t})\n\t}\n\n\tremoveCell(evt, selected) {\n\t\tlet cell = selected.closest('.cell')\n\n\t\tthis.emitter.emit('list-change', {\n\t\t\ttype: 'remove'\n\t\t\t, cells: [cell]\n\t\t\t, event: evt\n\t\t})\n\t\tcell.remove()\n\t}\n\n\tisExternalDrop(evt) {\n\t\tlet uriList\n\t\tlet mode\n\t\tif (evt.dataTransfer) {\n\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t\tmode = evt.dataTransfer.getData('data:text/mode')\n\t\t}\n\n\t\tif (this.externalDrag || uriList) {\n\t\t\treturn true\n\t\t}\n\t\tif(mode == 'external-drag' && this.externalDragData) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\t\n\tasync getFilesEntries(evt) {\n\t\tlet mode\n\t\tif (evt.dataTransfer) {\n\t\t\tmode = evt.dataTransfer.getData('data:text/mode')\n\t\t}\n\t\tif(mode == 'external-drag' && this.externalDragData) {\n\t\t\tlet files = await dataItemWorker.expandEntries(this.externalDragData, {\n\t\t\t\tkeepDirectories: false\n\t\t\t\t, recursive: true\n\t\t\t})\n\t\t\tdelete this.externalDragData\n\t\t\treturn files\n\t\t}\n\t\telse {\n\t\t\tlet files = await dataItemWorker.getFileEntriesFromEvent(evt, {\n\t\t\t\tkeepDirectories: false\n\t\t\t\t, recursive: true\n\t\t\t})\n\t\t\treturn files\n\n\t\t}\n\t}\n\n\t/**\n\t * Creates permanent cells for files dropped into the list\n\t * @param {array} files \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForFiles(files) {\n\t\tlet cells = files.map(file => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t<span class=\"title\">${file.name}</span>\n\t\t\t\t<span class=\"remove\">&times</span>\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = file\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n\t\n\t/**\n\t * Creates permanent cells for resource objects dropped into the list\n\t * @param {array[string]} uriList \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForUriList(uriList) {\n\t\tif(!Array.isArray(uriList)) {\n\t\t\turiList = [uriList]\n\t\t}\n\t\tlet cells = uriList.map(uri => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t<span class=\"title\">${uri}</span>\n\t\t\t\t<span class=\"remove\">&times</span>\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = uri\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n}","export default function eventEntryMapper([key, value]) {\n\tkey = key.trim()\n\tlet parts = key.split(' ')\n\tlet event = parts.shift().trim()\n\tlet selector = parts.join(' ').trim()\n\t\n\tif(typeof value === 'string') {\n\t\tvalue = value.trim()\n\t}\t\n\t\n\treturn {\n\t\tevent: event,\n\t\tselector: selector,\n\t\thandler: value\n\t}\n}","export default function extractEventNames(eventTriggers) {\n\tlet eventNames = Array.from(eventTriggers.reduce((acc, trigger) => {\n\t\tacc.add(trigger.event)\n\t\treturn acc\n\t}, new Set()))\n\treturn eventNames\n}","/**\n * Generates a random string id in the browser. Will probably not work\n * on the server.\n * @returns A base64 web url safe string\n */\nexport default function generateId() {\n\tlet array = new Uint8Array(32)\n\twindow.crypto.getRandomValues(array)\n\tlet value = btoa(array)\n\tvalue = value.replace(/\\//g, \"_\").replace(/\\+/g, \"-\").replace(/=+$/, \"\")\n\treturn value\n}","\nimport {View} from \"./view.js\"\nexport {\n\tView\n}","import generateId from \"./generate-id.js\"\n// import pick from \"./pick.js\"\nimport eventEntryMapper from \"./event-entry-mapper.js\"\nimport extractEventNames from \"./extract-event-names.js\"\n\nlet defaultOptions = {\n\t// The default `tagName` of a View's element is `\"div\"`.\n\ttagName: 'div'\n\t\n\t, events: {}\n\n}\nlet viewOptions = ['model', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n/**\n * A way to connect data to be displayed, a way to display it, and an organization\n * of functions to handle events.\n */\nexport class View {\n\tconstructor(options) {\n\t\tthis.id = generateId()\n\t\tObject.assign(this, defaultOptions)\n\t\tthis.preinitialize.apply(this, arguments);\n\t\tObject.assign(this, options)\n\t\tthis._ensureElement()\n\t\tthis.initialize.apply(this, arguments);\n\t}\n\n\n\t/**\n\t * preinitialize is an empty function by default. You can override it with a function\n\t * or object.  preinitialize will run before any instantiation logic is run in the View\n\t */\n\tpreinitialize() { }\n\n\t/**\n\t * Initialize is an empty function by default. Override it with your own\n\t * initialization logic.\n\t */\n\tinitialize() { }\n\n\t/**\n\t * **render** is the core function that your view should override, in order\n\t * to populate its element (`this.el`), with the appropriate HTML. The\n\t * convention is for **render** to always return `this`.\n\t * @returns this\n\t */\n\trender() {\n\t\treturn this\n\t}\n\t\n\t/**\n\t * Removes the element from the dom. Does not disable event listeners\n\t */\n\tremove() {\n\t\tthis.el.parentElement.removeChild(this.el)\n\t}\n\t\n\t/**\n\t * Adds this view as a child to a containing element. Nothing special is going on here.\n\t * This is just a shortcut for container.appendChild\n\t * @param {Element} container \n\t */\n\tappendTo(container) {\n\t\tcontainer.appendChild(this.el)\n\t}\n\n\t/**\n\t * Clears the contents of the container and adds this view.\n\t * @param {Element} container \n\t */\n\treplaceContentsOf(container) {\n\t\tcontainer.innerHTML = ''\n\t\tthis.appendTo(container)\n\t}\n\n\t/**\n\t * Set the element for this view, and if new, adds listeners to it in accordance\n\t * with the \"events\" member.\n\t * @param {Element} el The dom element which will be the root of this view\n\t * @returns this\n\t */\n\tsetElement(el) {\n\t\tif (this.el !== el) {\n\t\t\tthis.el = el\n\t\t\tthis._addListeners()\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Produces a DOM element to be assigned to your view. Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {string} name The element tag name\n\t * @returns The dom element\n\t */\n\t_createElement(name) {\n\t\tlet el = document.createElement(name)\n\t\tel.setAttribute('id', this.id)\n\t\tel.view = this\n\t\treturn el\n\t}\n\n\t/**\n\t * Ensures that the element exists. Applies attributes and className\n\t * to it regardless\n\t */\n\t_ensureElement() {\n\t\tif (!this.el) {\n\t\t\tthis.setElement(this._createElement(this.tagName))\n\t\t}\n\t\telse {\n\t\t\tthis._addListeners()\n\t\t}\n\t\tthis._setAttributes()\n\t\tif (this.className) {\n\t\t\tthis.el.classList.add(this.className)\n\t\t}\n\t}\n\n\t/**\n\t * Set attributes from a hash on this view's element.  Exposed for\n\t * subclasses using an alternative DOM manipulation API.\n\t * @param {object} attributes \n\t */\n\t_setAttributes(attributes) {\n\t\tif (this.attributes) {\n\t\t\tfor (let [key, value] of Object.entries(this.attributes)) {\n\t\t\t\tthis.el.setAttribute(key, value)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * Set callbacks, where `this.events` is a hash of\n\t * *{\"event selector\": \"callback\"}*\n\t *\n\t *    {\n\t *       'mousedown .title':  'edit',\n\t *       'click .button':     'save',\n\t *       'click .open':       function(e) { ... },\n\t *       'keydown .':     \t  'handleKey'\n\t *    }\n\t * pairs. Callbacks will be bound to the view, with `this` set properly.\n\t * \n\t * \n\t * Note that the selector `.` will match the root element and can be used\n\t * as a final chance to handle events or for events like an escape key\n\t * which are essentially global to the widget.\n\t * \n\t */\n\t_addListeners() {\n\t\tthis.eventTriggers = Object.entries(this.events).map(eventEntryMapper)\n\t\tlet eventNames = extractEventNames(this.eventTriggers)\t\t\n\n\t\tfor(let eventName of eventNames) {\n\t\t\tthis.el.addEventListener(eventName, this._eventHandler.bind(this))\n\t\t}\n\t}\n\t\n\t/**\n\t * Get the elements from the view which match the selector\n\t * @param {string} selector A css selector. `.` will select the root element\n\t * @returns An array of elements\n\t */\n\t_getCandidates(selector) {\n\t\tif(selector === '.') {\n\t\t\treturn [this.el]\n\t\t}\n\t\treturn Array.from(this.el.querySelectorAll(selector))\n\t}\n\t\n\t/**\n\t * Handles all events for all elements within the view. It attempts to find a\n\t * trigger matching the event and then process it. It will match and invoke\n\t * only one trigger.\n\t * @param {Event} evt \n\t */\n\t_eventHandler(evt) {\n\t\tfor(let trigger of this.eventTriggers) {\n\t\t\tif(evt.type == trigger.event) {\n\t\t\t\tlet candidates = this._getCandidates(trigger.selector)\n\t\t\t\tlet found = null\n\t\t\t\tfor(let candidate of candidates) {\n\t\t\t\t\tif(candidate === evt.target || candidate.contains(evt.target)) {\n\t\t\t\t\t\tfound = candidate\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(found) {\n\t\t\t\t\tif(typeof trigger.handler === 'string') {\n\t\t\t\t\t\tthis[trigger.handler].call(this, evt, found)\n\t\t\t\t\t}\t\n\t\t\t\t\telse if(typeof trigger.handler === 'function') {\n\t\t\t\t\t\ttrigger.handler.call(this, evt, found)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","\nexport default class DataItemWorker {\n\n\tasync getFileFromEntry(entry) {\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tif (entry.file) {\n\t\t\t\t\tentry.file(file => {\n\t\t\t\t\t\tfile.entry = entry\n\t\t\t\t\t\tresolve(file)\n\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\tconsole.error(err)\n\t\t\t\t\t\tresolve(null)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tresolve(null)\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t\tresolve(null)\n\t\t\t}\n\t\t})\n\t\treturn p\n\t}\n\n\tasync readDirectoryEntries(entry) {\n\t\tlet p = new Promise((resolve, reject) => {\n\t\t\tlet dirReader = entry.createReader()\n\t\t\tlet result = []\n\t\t\tlet readThem = () => {\n\t\t\t\tdirReader.readEntries(async (entries) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif(entries && entries.length > 0) {\n\t\t\t\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\t\t\t\tresult.push(entry)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treadThem()\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tresolve(result)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tconsole.error(e)\n\t\t\t\t\t\tresolve(result)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treadThem()\n\t\t})\n\t\treturn p\n\t}\n\n\t/**\n\t * \n\t * Takes a list of DataTransferItems and resolves them to FileEntry objects.\n\t * \n\t * Note, you can get a real File object by calling `getFileFromEntry`\n\t * @param {array[DataTransferItem|File|FileEntry|DirectoryEntry]} entries \n\t * @param {*} [options]\n\t * @returns \n\t */\n\tasync expandEntries(entries, options) {\n\t\toptions = Object.assign({\n\t\t\tkeepDirectories: false\n\t\t\t, recursive: true\n\t\t}, options)\n\t\tlet expanded = []\n\t\tlet target = [...entries]\t\n\t\t\n\t\twhile(target.length > 0) {\n\t\t\t\n\t\t\t// You MUST process all of the DataTransferItems first. If you do a directory read\n\t\t\t// it will blank out the information on those items.\n\t\t\tlet item = target.shift()\n\t\t\t\n\t\t\tif(item instanceof File) {\n\t\t\t\texpanded.push(item)\n\t\t\t}\n\t\t\telse if(item.isFile === true && item.isDirectory === false) {\n\t\t\t\texpanded.push(item)\n\t\t\t}\n\t\t\telse if(item.isFile === false && item.isDirectory === true) {\n\t\t\t\tlet dirEntries = await this.readDirectoryEntries(item)\n\t\t\t\tif(options.recursive) {\n\t\t\t\t\ttarget.push(...dirEntries)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!options.keepDirectories) {\n\t\t\t\t\t\tdirEntries = dirEntries.filter(item => item.isFile)\n\t\t\t\t\t}\n\t\t\t\t\texpanded.push(...dirEntries)\n\t\t\t\t}\n\t\t\t\tif(options.keepDirectories) {\n\t\t\t\t\texpanded.push(item)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (item.kind === \"file\") {\n\t\t\t\tif (item.webkitGetAsEntry) {\n\t\t\t\t\tlet entry = item.webkitGetAsEntry()\n\t\t\t\t\tif (entry) {\n\t\t\t\t\t\ttarget.push(entry)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(item.getAsFile) {\n\t\t\t\t\ttarget.push(item.getAsFile())\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\texpanded = expanded.filter(item => !!item)\n\t\treturn expanded\n\t}\n\n\t/**\n\t * A utility function to extract the file entries from a file drop event.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tasync getFileEntriesFromEvent(evt, options) {\n\t\tlet entries = []\n\t\t// items is the new interface we should use if that's available\n\t\tif (evt.dataTransfer.items) {\n\t\t\tentries.push(...evt.dataTransfer.items)\n\t\t} \n\t\telse if(evt.dataTransfer.files) {\n\t\t\tentries.push(...evt.dataTransfer.files)\n\t\t}\n\t\tlet result = await this.expandEntries(entries, options)\n\t\treturn result.filter(item => !!item)\n\t}\n\n\n}","import { View } from '@webhandle/backbone-view'\nimport Emitter from '@webhandle/minimal-browser-event-emitter'\nimport DataItemWorker from './data-item-worker.mjs'\n\nlet dataItemWorker = new DataItemWorker()\n\nexport default class ListView extends View {\n\n\t/**\n\t * Setup the event listners and default objects.\n\t * @param {Object} options \n\t */\n\tpreinitialize(options = {}) {\n\t\tthis.desktopHandleSelector = options.desktopHandleSelector\n\t\tthis.mobileHandleSelector = options.mobileHandleSelector || '.handle'\n\t\tthis.events = Object.assign({}, {\n\t\t\t'drop .': 'handleDrop'\n\t\t\t, 'dragend .': 'handleDragEnd'\n\t\t\t, 'dragleave .': 'handleDragLeave'\n\t\t\t, 'dragover .': 'handleDragover'\n\t\t\t, 'dragenter .': 'dragEnter'\n\t\t\t, 'dragover *': 'dragEnterCell'\n\t\t\t, 'dragstart *': 'dragStart'\n\t\t\t, ['touchstart ' + this.mobileHandleSelector]: 'touchDrag'\n\t\t\t, ['touchmove ' + this.mobileHandleSelector]: 'touchMove'\n\t\t\t, ['touchend ' + this.mobileHandleSelector]: 'touchEnd'\n\t\t\t, ['touchcancel ' + this.mobileHandleSelector]: 'touchCancel'\n\t\t}, options.events)\n\t\tthis.placeholderName = options.placeholderName || 'New Item'\n\t\toptions.events = this.events\n\t\tif (!this.emitter) {\n\t\t\tthis.emitter = new Emitter()\n\t\t}\n\t\tthis.overscrollCaptures = {}\n\t}\n\n\t/**\n\t * Returns true if a file is being dragged into the list.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tisFileTypeDrag(evt) {\n\t\tif (evt.dataTransfer && evt.dataTransfer.item && evt.dataTransfer.item.length > 0) {\n\t\t\tif (evt.dataTransfer.items[0].kind === 'file') {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\tif (evt.dataTransfer && evt.dataTransfer.types) {\n\t\t\tfor (let type of evt.dataTransfer.types) {\n\t\t\t\tif (type.toLowerCase() == 'files') {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\t/**\n\t * Looks to see if there's a resource label and we should therefore consider this an\n\t * external resource object that's being dragged into the list.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tisResourceTypeDrag(evt) {\n\t\treturn !!this.extractLabel(evt)\n\t}\n\n\t/**\n\t * Watches for entry of dragging into a cell so we can tell of the user is still\n\t * performing a drag operation.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\tdragEnterCell(evt, selected) {\n\t\tthis.canCancel = false\n\t}\n\n\t/**\n\t * Watch for the end of dragging for one of the existing cells. This is the cleanup\n\t * for the case where a user is dragging and then presses escape.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragEnd(evt, selected) {\n\t\tthis.cleanupDrag()\n\t}\n\n\t/**\n\t * Watches for the mouse leaving the list area. The spec has no good way to tell if the user\n\t * has stopped dragging within our control area, so here we're doing a little dance to watch\n\t * when the user leaves any of the top level elements and then perform a cancel if we don't\n\t * see another drag event within a few milliseconds.\n\t * \n\t * This does sometimes lead to false positives, but that's generally okay since the code just\n\t * interprets the next drag event as if the user just started their drag, so it recovers \n\t * fairly well.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragLeave(evt, selected) {\n\t\tif (this.externalDrag) {\n\t\t\tif (evt.target == this.el || this.getCells().includes(evt.target)) {\n\t\t\t\t// so we're leaving the whole list. If we don't immediately enter someplace else\n\t\t\t\t// then we should interpret this as a cancel\n\t\t\t\t// In this case, \"the whole list\" is one of the cells or the container\n\t\t\t\tthis.canCancel = true\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tif (this.canCancel) {\n\t\t\t\t\t\tthis.cleanupDrag()\n\t\t\t\t\t}\n\t\t\t\t}, 20)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if this is a type of object from outside the list that can be added\n\t * to the list. By default it allows files and uri-list types. To turn off the abilty\n\t * to drag other items into the list, just override to return false.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tshouldInsertCellForExternalDrag(evt) {\n\t\treturn this.isFileTypeDrag(evt) || this.isResourceTypeDrag(evt)\n\t}\n\n\n\t/**\n\t * This is the mobile/touch equivalent of dragStart\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchDrag(evt, selected) {\n\t\tthis.captureOverscroll('html')\n\t\tthis.captureOverscroll('body')\n\t\tthis.dragStart(evt, selected)\n\t}\n\n\t/**\n\t * Handle the user touch dragging an item.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchMove(evt, selected) {\n\t\tlet top = this.boxTop()\n\t\tlet pos = Math.max(0, evt.touches[0].pageY) - top\n\t\tthis.positionOnDrag(pos)\n\t}\n\n\t/**\n\t * This is essentially a mobile/touch drop\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchEnd(evt, selected) {\n\t\tthis.handleDrop(evt, selected)\n\t}\n\n\t/**\n\t * Cleanup after a mobile drag\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\ttouchCancel(evt, selected) {\n\t\tthis.cleanupDrag()\n\t}\n\n\t/**\n\t * Listens for the element being dragged. The spec seems to indicate that this is\n\t * fired on mobile as well, but in practice is seems to only get fired on \n\t * desktop.\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\tdragStart(evt, selected) {\n\t\tthis.dragging = this.getCellFromChild(selected)\n\t\tthis.dragging.classList.add('dragging')\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.setDragImage(document.createElement('div'), 0, 0)\n\t\t}\n\t}\n\n\t/**\n\t * Extracts a placeholder label from the data transfer types. The label name is\n\t * part of the type name. So, a type of `data:text/label,awesome` would indicate\n\t * that the placeholder is supposed to be `awesome`.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\textractLabel(evt) {\n\t\tlet labelPrefix = 'data:text/label,'\n\t\tfor (let type of evt.dataTransfer.types) {\n\t\t\tif (type.indexOf(labelPrefix) == 0) {\n\t\t\t\treturn type.substring(labelPrefix.length)\n\t\t\t}\n\t\t}\n\n\t\treturn null\n\t}\n\n\t/**\n\t * Restores the elements previous overscroll behavior (see captureOverscroll for why we need\n\t * this)\n\t * @param {string} elName \n\t */\n\trestoreOverscroll(elName) {\n\t\tif (elName in this.overscrollCaptures) {\n\t\t\tdocument.querySelector(elName).style['overscroll-behavior'] = this.overscrollCaptures[elName]\n\t\t\tdelete this.overscrollCaptures[elName]\n\t\t}\n\t}\n\n\t/**\n\t * Used for mobile to get the present value of what happens when the user drags their finger\n\t * farther than the screen can scroll. By default what happens is a page reload. That won't \n\t * be what we want if a user is dragging a list item, so we have to capture that behavior and\n\t * change it so that nothing happens to the page.\n\t * @param {string} elName \n\t */\n\tcaptureOverscroll(elName) {\n\t\tlet el = document.querySelector(elName)\n\t\tthis.overscrollCaptures[elName] = el.style['overscroll-behavior']\n\t\tel.style['overscroll-behavior'] = 'none'\n\t}\n\n\t/**\n\t * Utility function to create a dom node based on html\n\t * @param {string} html \n\t * @returns \n\t */\n\t_makeElementFromHTML(html) {\n\t\tlet div = document.createElement('div')\n\t\tdiv.innerHTML = html\n\t\tlet child = div.children[0]\n\t\treturn child\n\t}\n\n\n\t/**\n\t * Creates markup for the external drag event placeholder cell. Attempts\n\t * to determine a reasonable label.\n\t * @param {Event} evt \n\t * @returns \n\t */\n\tcreateExternalDragPlaceholderHTML(evt) {\n\t\tlet placeholder = this.extractLabel(evt) || this.placeholderName\n\t\tlet html = `<div class=\"cell\">\n\t\t\t<span class=\"handle\">↕</span>\n\t\t\t${placeholder}\n\t\t</div>`\n\t\treturn html\n\n\t}\n\n\t/**\n\t * Creates a placeholder cell for a drag event where the source is an\n\t * external object like a file or something else on the page.\n\t * @param {Event} evt \n\t */\n\tcreateExternalDragPlaceholderCell(evt) {\n\t\tlet html = this.createExternalDragPlaceholderHTML(evt)\n\t\tlet cell = this._makeElementFromHTML(html)\n\t\tcell.setAttribute('draggable', true)\n\t\tthis.addCell(cell)\n\t\tthis.dragStart(evt, cell)\n\t}\n\n\tdragEnter(evt, selected) {\n\t\tif (!this.dragging && this.shouldInsertCellForExternalDrag(evt)) {\n\t\t\t// If we're not already doing a drag operation, we need to start one\n\t\t\t// We create a placeholder for this event and then move it up and down\n\t\t\t// like a pre-existing cell. \n\t\t\t// NOTE: We do not have much information about the contents of the\n\t\t\t// drag until the drop event occurs. This placeholder may have to be\n\t\t\t// somewhat generic.\n\t\t\tthis.externalDrag = true\n\t\t\tthis.createExternalDragPlaceholderCell(evt)\n\t\t}\n\t}\n\n\t/**\n\t * Watch for movement of something being dragged\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDragover(evt, selected) {\n\t\tevt.preventDefault()\n\t\tthis.canCancel = false\n\t\tlet top = this.boxTop()\n\t\tlet pos = evt.y - top\n\n\t\tif (this.dragging) {\n\t\t\tif (evt.dataTransfer) {\n\t\t\t\tevt.dataTransfer.dropEffect = 'move'\n\t\t\t}\n\t\t\tthis.positionOnDrag(pos)\n\t\t}\n\t\telse {\n\t\t\tif (evt.dataTransfer) {\n\t\t\t\tevt.dataTransfer.dropEffect = 'copy'\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates permanent cells for files dropped into the list\n\t * @param {array[FileEntry|File]} files \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForFiles(files) {\n\t\tlet cells = files.map(file => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t${file.name}\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = file\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n\n\t/**\n\t * Creates permanent cells for resource objects dropped into the list\n\t * @param {array[string]} uriList \n\t * @returns an array of Elements\n\t */\n\tcreateCellsForUriList(uriList) {\n\t\tif (!Array.isArray(uriList)) {\n\t\t\turiList = [uriList]\n\t\t}\n\t\tlet cells = uriList.map(uri => {\n\t\t\tlet html = `<div class=\"cell\">\n\t\t\t\t<span class=\"handle\">↕</span>\n\t\t\t\t${uri}\n\t\t\t</div>`\n\t\t\tlet el = this._makeElementFromHTML(html)\n\t\t\tel.data = uri\n\t\t\treturn el\n\t\t})\n\t\treturn cells\n\t}\n\n\t/**\n\t * Creates permanent cells for drops of unknown types.\n\t * @param {Event} evt \n\t * @returns An array of elements\n\t */\n\tcreateCellsForUnknownType(evt) {\n\t\treturn []\n\t}\n\t\n\tisExternalDrop(evt) {\n\t\tlet uriList\n\t\tif (evt.dataTransfer) {\n\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t}\n\n\t\tif (this.externalDrag || uriList) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\t\n\tasync getFilesEntries(evt) {\n\t\tlet files = await dataItemWorker.getFileEntriesFromEvent(evt, {\n\t\t\tkeepDirectories: false\n\t\t\t, recursive: true\n\t\t})\n\t\treturn files\n\t}\n\n\t/**\n\t * Creates permanent cells for external items dropped into the list,\n\t * emits events, and does cleaup\n\t * @param {Event} evt \n\t * @param {Element} selected \n\t */\n\thandleDrop(evt, selected) {\n\t\tevt.preventDefault()\n\t\t\n\t\t// Sometimes the placeholder gets cleaned up before the insertion of the new nodes\n\t\t// happens. Let's capture the following element just in case we need it.\n\t\tlet afterDragElement\n\t\tif(this.dragging) {\n\t\t\tafterDragElement = this.dragging.nextElementSibling\n\t\t}\n\n\t\tlet p = new Promise(async (resolve, reject) => {\n\t\t\tif (this.isExternalDrop(evt)) {\n\t\t\t\t// if a link is dropped, there's no exteralDrag object, just a drop object\n\t\t\t\tlet uriList\n\t\t\t\tif (evt.dataTransfer) {\n\t\t\t\t\turiList = evt.dataTransfer.getData('text/uri-list')\n\t\t\t\t}\n\n\t\t\t\tlet changes = []\n\t\t\t\tlet files = await this.getFilesEntries(evt)\n\t\t\t\tlet cells = []\n\t\t\t\tif (files && files.length > 0) {\n\t\t\t\t\tcells = this.createCellsForFiles(files)\n\t\t\t\t\tfor (let count = 0; count < cells.length; count++) {\n\t\t\t\t\t\tlet cell = cells[count]\n\t\t\t\t\t\tif (!cell.file) {\n\t\t\t\t\t\t\tcell.file = files[count]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (uriList) {\n\t\t\t\t\tif (typeof uriList == 'string') {\n\t\t\t\t\t\t// Acording to the spec, this should be a list with one uri on every line\n\t\t\t\t\t\t// In practice, it seems like the browser is eating the return characters\n\t\t\t\t\t\t// In my tests, I'm passing multiple uris as comma separated. I'm handling\n\t\t\t\t\t\t// both cases here.\n\t\t\t\t\t\tlet parts = [uriList]\n\t\t\t\t\t\tfor (let sep of ['\\r\\n', '\\n', ',']) {\n\t\t\t\t\t\t\tlet newParts = []\n\t\t\t\t\t\t\tfor (let part of parts) {\n\t\t\t\t\t\t\t\tnewParts.push(...part.split(sep))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tparts = newParts\n\t\t\t\t\t\t}\n\t\t\t\t\t\turiList = parts\n\t\t\t\t\t}\n\t\t\t\t\tcells = this.createCellsForUriList(uriList)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcells = this.createCellsForUnknownType(evt)\n\t\t\t\t}\n\n\t\t\t\tfor (let cell of cells) {\n\t\t\t\t\tcell.setAttribute('draggable', true)\n\t\t\t\t\tthis.addCell(cell, {\n\t\t\t\t\t\tbefore: this.dragging || afterDragElement\n\t\t\t\t\t})\n\t\t\t\t\tchanges.push({\n\t\t\t\t\t\tcell: cell\n\t\t\t\t\t\t, file: cell.file\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tif (this.dragging) {\n\t\t\t\t\tthis.dragging.remove()\n\t\t\t\t}\n\t\t\t\tthis.emitter.emit('list-change', {\n\t\t\t\t\ttype: 'drop'\n\t\t\t\t\t, cells: cells\n\t\t\t\t\t, files: files\n\t\t\t\t\t, changes: changes\n\t\t\t\t\t, event: evt\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.emitter.emit('list-change', {\n\t\t\t\t\ttype: 'reorder'\n\t\t\t\t\t, cells: [this.dragging]\n\t\t\t\t})\n\t\t\t}\n\n\t\t})\n\t\tthis.cleanupDrag()\n\t\treturn p\n\t}\n\n\t/**\n\t * Adds a new item to the list, last item by default \n\t * @param {string|Element} cell The item to add \n\t * @param {*} [options]\n\t * @param {boolean} options.first If true inserted at the start of the list\n\t * @param {boolean} options.last If true inserted at the end of the list\n\t * @param {Element} options.after Insert after this item \n\t * @param {Element} options.before Insert before this item\n\t * @param {*} options.data Data to be set on the element\n\t */\n\taddCell(cell, options = {}) {\n\t\tif (typeof cell === 'string') {\n\t\t\tcell = this._makeElementFromHTML(cell)\n\t\t}\n\n\t\tif (options.data) {\n\t\t\tcell.data = options.data\n\t\t}\n\n\t\tif (options.first) {\n\t\t\tthis.el.insertAdjacentElement('afterbegin', cell)\n\t\t}\n\t\telse if (options.before) {\n\t\t\tthis.el.insertBefore(cell, options.before)\n\t\t}\n\t\telse if (options.after) {\n\t\t\toptions.after.after(cell)\n\t\t}\n\t\telse {\n\t\t\tthis.el.insertAdjacentElement('beforeend', cell)\n\t\t}\n\t\treturn cell\n\t}\n\n\t/**\n\t * \n\t * @param {int} pos position of pointer relative to the top of the box\n\t */\n\tpositionOnDrag(pos) {\n\t\tlet over = this.findOver(pos)\n\t\tthis.addCell(this.dragging, {\n\t\t\tbefore: over\n\t\t})\n\t}\n\n\t/**\n\t * Gets the top level objects of the list.\n\t * @returns \n\t */\n\tgetCells() {\n\t\treturn [...this.el.children]\n\t}\n\n\t/**\n\t * Cleanup after a drag event by deleting any placeholder objects\n\t * and restoring the browser to its pre-drag settings\n\t */\n\tcleanupDrag() {\n\t\tif (this.dragging && this.externalDrag) {\n\t\t\tthis.dragging.remove()\n\t\t}\n\n\t\tdelete this.dragging\n\t\tdelete this.externalDrag\n\t\tthis.getCells().forEach(cell => {\n\t\t\tcell.classList.remove('dragging')\n\t\t})\n\t\tthis.restoreOverscroll('html')\n\t\tthis.restoreOverscroll('body')\n\t}\n\n\t/**\n\t * Determine which cell the pointer/finger is currently over.\n\t * @param {Object} pos \n\t * @returns \n\t */\n\tfindOver(pos) {\n\t\tlet locations = this.findLocations()\n\t\tfor (let loc of locations) {\n\t\t\tif (pos >= loc.top && pos <= loc.bottom) {\n\t\t\t\treturn loc.cell\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Gets the top of the list box\n\t * @returns \n\t */\n\tboxTop() {\n\t\tlet boxRect = this.el.getBoundingClientRect()\n\t\tlet top = boxRect.top\n\t\treturn top\n\t}\n\n\n\t/**\n\t * Sets up the cells to be draggable and makes the mobile touch handles ready for drag.\n\t */\n\trender() {\n\t\tif (this.desktopHandleSelector) {\n\t\t\tthis.el.querySelectorAll(this.desktopHandleSelector).forEach(handle => {\n\t\t\t\thandle.setAttribute(\"draggable\", true)\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tthis.getCells().forEach(cell => {\n\t\t\t\tcell.setAttribute(\"draggable\", true)\n\t\t\t})\n\t\t}\n\t\tif (this.mobileHandleSelector) {\n\t\t\tthis.el.querySelectorAll(this.mobileHandleSelector).forEach(handle => {\n\t\t\t\thandle.style['touch-action'] = 'none'\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * \n\t * @returns The relative locations of the cells in the list\n\t */\n\tfindLocations() {\n\t\tlet top = this.boxTop()\n\n\t\tlet locations = []\n\t\tthis.getCells().forEach(cell => {\n\t\t\tlet rect = cell.getBoundingClientRect()\n\t\t\tlocations.push({\n\t\t\t\ttop: rect.top - top\n\t\t\t\t, bottom: rect.bottom - top\n\t\t\t\t, cell: cell\n\t\t\t})\n\t\t})\n\t\treturn locations\n\t}\n\n\t/**\n\t * Give a node for the cell or a descendent of a cell, returns the node\n\t * for the cell.\n\t * @param {Node} child \n\t * @returns \n\t */\n\tgetCellFromChild(child) {\n\t\tif (child.parentElement == this.el) {\n\t\t\treturn child\n\t\t}\n\t\tif (!child) {\n\t\t\treturn null\n\t\t}\n\t\treturn this.getCellFromChild(child.parentElement)\n\t}\n}\n\n\n","import Streamish from \"./streamish.mjs\"\n\n/**\n * Add this most basic of the EventEmitter functions (on, emit, removeListener) to the browser's\n * EventTarget functionality.\n * \n * The eventEmitter.emit() method allows an arbitrary set of arguments to be passed to the listener \n * functions. Keep in mind that when an ordinary listener function is called, the standard this \n * keyword is intentionally set to reference the EventEmitter instance to which the listener is attached.\n */\nlet base = typeof EventTarget === 'undefined' ? Streamish : EventTarget\nexport default class EventEmitter extends base {\n\tconstructor(target) {\n\t\tsuper(target)\n\t\tif(target) {\n\t\t\tthis.innerEventTarget = target\n\t\t}\n\t\telse {\n\t\t\tthis.innerEventTarget = this\n\t\t}\n\t}\n\t/**\n\t * Adds the listener function to the end of the listeners array for the event named eventName. No checks \n\t * are made to see if the listener has already been added. Multiple calls passing the same combination \n\t * of eventName and listener will result in the listener being added, and called, multiple times.\n\t * @param {string} eventName The event type name\n\t * @param {*} listener The listener function where has arbitrary arguments\n\t */\n\ton(eventName, listener) {\n\t\tif(this.innerEventTarget.addEventListener) {\n\t\t\tlet nativeListener = (event) => {\n\t\t\t\tlistener.apply(this, event.detail)\n\t\t\t}\n\t\t\tlistener.nativeListener = nativeListener\n\t\t\tthis.innerEventTarget.addEventListener(eventName, nativeListener)\n\t\t}\n\t\telse {\n\t\t\tsuper.on(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Synchronously calls each of the listeners registered for the event named eventName, in the order \n\t * they were registered, passing the supplied arguments to each.\n\t * \n\t * @param {string} eventName The event type name\n\t * @param  {...any} args \n\t */\n\temit(eventName, ...args) {\n\t\tif(this.innerEventTarget.dispatchEvent) {\n\t\t\tthis.innerEventTarget.dispatchEvent(this._makeEvent(eventName, args))\n\t\t}\n\t\telse {\n\t\t\tsuper.emit(eventName, ...args)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif(this.innerEventTarget.removeEventListener) {\n\t\t\tlistener = listener.nativeListener || listener\n\t\t\tthis.innerEventTarget.removeEventListener(eventName, listener)\n\t\t}\n\t\telse {\n\t\t\tsuper.removeListener(eventName, listener)\n\t\t}\n\t\treturn this\n\t}\n\t\n\t_makeEvent(eventName, args) {\n\t\tif(typeof CustomEvent === 'function') {\n\t\t\treturn new CustomEvent(eventName, {\n\t\t\t\tdetail: args\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tlet evt = new Event(eventName)\n\t\t\tevt.detail = args\n\t\t\treturn evt\n\t\t}\n\t}\n}","let Emitter\nimport Streamish from \"./streamish.mjs\"\nimport EventEmitter from \"./event-emitter.mjs\"\n\nif (typeof EventTarget !== 'undefined') {\n\tEmitter = EventEmitter\n}\nelse {\n\tEmitter = Streamish\n}\n\n\nexport default Emitter","\nexport default class Streamish {\n\tconstructor() {\n\t\tthis.handles = {}\n\t}\n\n\ton(evt, handle) {\n\t\tlet handles = this.handles[evt]\n\t\tif (!handles) {\n\t\t\thandles = this.handles[evt] = []\n\t\t}\n\t\thandles.push(handle)\n\t\treturn this\n\t}\n\n\temit(evt, ...args) {\n\t\tif (evt in this.handles) {\n\t\t\tfor (let handle of this.handles[evt]) {\n\t\t\t\thandle.apply(this, args)\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Removes the specified listener from the listener array for the event named eventName.\n\t * @param {string} eventName The event type name\n\t * @param {function} listener The listener function\n\t */\n\tremoveListener(eventName, listener) {\n\t\tif (eventName in this.handles) {\n\t\t\tthis.handles[eventName] = this.handles[eventName].filter(func => {\n\t\t\t\treturn func !== listener\n\t\t\t})\n\t\t}\n\t}\n}","\nimport t1 from './test1.tri'\nimport t2 from './test2.tri';\nimport t3 from './dankolz/audio-player/controls.tri';\nimport t4 from './dankolz/audio-player/play-pause-button.tri';\nimport t5 from './dankolz/audio-player/next-button.tri';\nimport t6 from './dankolz/audio-player/previous-button.tri';\n\nexport let test1 = t1\nexport let test2 = t2\nexport let playerControls = t3","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { default as go } from './index.js'\ngo()\n\n\n// import ListView from '@webhandle/drag-sortable-list'\nimport PlayControlsView from '../client-lib/player-controls.mjs'\nimport Player from '../client-lib/player.mjs'\nimport Emitter from '@webhandle/minimal-browser-event-emitter'\nimport PlaylistView from '../client-lib/playlist-view.mjs'\nimport LibraryView from '../client-lib/library-view.mjs'\nimport makeTree from 'kalpa-tree-on-page'\n\n\nlet emitter = new Emitter()\n\nlet controls = document.querySelector('.controls')\nlet controlsView = new PlayControlsView({\n\tel: controls\n\t, emitter: emitter\n})\ncontrolsView.render()\n\nlet playlist = document.querySelector('.playlist')\nlet playlistView = new PlaylistView({\n\tel: playlist\n\t, emitter: emitter\n})\nplaylistView.render()\n\n\nlet player = new Player({\n\tcontrolEvents: emitter\n\t, playlist: playlistView\n})\n\n\nlet library = document.querySelector('.library')\nlet libraryView = new LibraryView({\n\tel: library\n\t, emitter: emitter\n})\nlibraryView.render()\n\n"],"names":[],"sourceRoot":""}